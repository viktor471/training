WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:02.060 align:start position:0%
 
hey<00:00:00.390><c> everybody</c><00:00:00.750><c> how's</c><00:00:00.870><c> it</c><00:00:01.110><c> going</c><00:00:01.260><c> in</c><00:00:01.500><c> this</c>

00:00:02.060 --> 00:00:02.070 align:start position:0%
hey everybody how's it going in this
 

00:00:02.070 --> 00:00:04.010 align:start position:0%
hey everybody how's it going in this
programming<00:00:02.550><c> terms</c><00:00:02.730><c> video</c><00:00:03.060><c> we'll</c><00:00:03.659><c> be</c><00:00:03.689><c> going</c>

00:00:04.010 --> 00:00:04.020 align:start position:0%
programming terms video we'll be going
 

00:00:04.020 --> 00:00:06.170 align:start position:0%
programming terms video we'll be going
over<00:00:04.110><c> the</c><00:00:04.290><c> term</c><00:00:04.500><c> first</c><00:00:04.890><c> class</c><00:00:05.190><c> functions</c><00:00:05.730><c> now</c>

00:00:06.170 --> 00:00:06.180 align:start position:0%
over the term first class functions now
 

00:00:06.180 --> 00:00:07.190 align:start position:0%
over the term first class functions now
we're<00:00:06.299><c> going</c><00:00:06.420><c> to</c><00:00:06.480><c> look</c><00:00:06.569><c> at</c><00:00:06.720><c> first</c><00:00:06.899><c> class</c>

00:00:07.190 --> 00:00:07.200 align:start position:0%
we're going to look at first class
 

00:00:07.200 --> 00:00:09.110 align:start position:0%
we're going to look at first class
functions<00:00:07.470><c> in</c><00:00:07.859><c> both</c><00:00:07.980><c> JavaScript</c><00:00:08.700><c> and</c><00:00:08.910><c> in</c>

00:00:09.110 --> 00:00:09.120 align:start position:0%
functions in both JavaScript and in
 

00:00:09.120 --> 00:00:11.600 align:start position:0%
functions in both JavaScript and in
Python<00:00:09.300><c> so</c><00:00:10.139><c> you</c><00:00:10.200><c> can</c><00:00:10.469><c> see</c><00:00:10.650><c> the</c><00:00:10.769><c> concept</c><00:00:11.190><c> in</c><00:00:11.429><c> two</c>

00:00:11.600 --> 00:00:11.610 align:start position:0%
Python so you can see the concept in two
 

00:00:11.610 --> 00:00:13.220 align:start position:0%
Python so you can see the concept in two
different<00:00:11.759><c> languages</c><00:00:12.389><c> and</c><00:00:12.570><c> that</c><00:00:12.960><c> may</c><00:00:13.080><c> help</c>

00:00:13.220 --> 00:00:13.230 align:start position:0%
different languages and that may help
 

00:00:13.230 --> 00:00:15.350 align:start position:0%
different languages and that may help
the<00:00:13.410><c> term</c><00:00:13.559><c> sink</c><00:00:13.920><c> in</c><00:00:14.070><c> a</c><00:00:14.160><c> little</c><00:00:14.190><c> bit</c><00:00:14.490><c> but</c><00:00:15.210><c> don't</c>

00:00:15.350 --> 00:00:15.360 align:start position:0%
the term sink in a little bit but don't
 

00:00:15.360 --> 00:00:17.150 align:start position:0%
the term sink in a little bit but don't
worry<00:00:15.509><c> if</c><00:00:15.660><c> you</c><00:00:15.780><c> don't</c><00:00:15.929><c> know</c><00:00:16.049><c> either</c><00:00:16.740><c> of</c><00:00:17.039><c> these</c>

00:00:17.150 --> 00:00:17.160 align:start position:0%
worry if you don't know either of these
 

00:00:17.160 --> 00:00:19.250 align:start position:0%
worry if you don't know either of these
languages<00:00:17.699><c> what's</c><00:00:18.240><c> important</c><00:00:18.720><c> to</c><00:00:18.930><c> take</c><00:00:19.109><c> away</c>

00:00:19.250 --> 00:00:19.260 align:start position:0%
languages what's important to take away
 

00:00:19.260 --> 00:00:21.080 align:start position:0%
languages what's important to take away
from<00:00:19.439><c> the</c><00:00:19.500><c> video</c><00:00:19.650><c> is</c><00:00:20.039><c> the</c><00:00:20.189><c> concept</c><00:00:20.760><c> of</c><00:00:20.910><c> first</c>

00:00:21.080 --> 00:00:21.090 align:start position:0%
from the video is the concept of first
 

00:00:21.090 --> 00:00:23.060 align:start position:0%
from the video is the concept of first
class<00:00:21.270><c> functions</c><00:00:21.810><c> and</c><00:00:22.020><c> not</c><00:00:22.410><c> the</c><00:00:22.590><c> specific</c>

00:00:23.060 --> 00:00:23.070 align:start position:0%
class functions and not the specific
 

00:00:23.070 --> 00:00:25.250 align:start position:0%
class functions and not the specific
syntax<00:00:23.340><c> of</c><00:00:23.820><c> any</c><00:00:24.029><c> one</c><00:00:24.269><c> language</c><00:00:24.510><c> so</c>

00:00:25.250 --> 00:00:25.260 align:start position:0%
syntax of any one language so
 

00:00:25.260 --> 00:00:27.019 align:start position:0%
syntax of any one language so
understanding<00:00:25.890><c> first</c><00:00:26.070><c> class</c><00:00:26.279><c> functions</c><00:00:26.730><c> will</c>

00:00:27.019 --> 00:00:27.029 align:start position:0%
understanding first class functions will
 

00:00:27.029 --> 00:00:29.779 align:start position:0%
understanding first class functions will
help<00:00:27.630><c> you</c><00:00:27.779><c> understand</c><00:00:28.349><c> other</c><00:00:28.680><c> terms</c><00:00:29.070><c> such</c><00:00:29.369><c> as</c>

00:00:29.779 --> 00:00:29.789 align:start position:0%
help you understand other terms such as
 

00:00:29.789 --> 00:00:32.120 align:start position:0%
help you understand other terms such as
higher<00:00:30.150><c> water</c><00:00:30.449><c> functions</c><00:00:30.990><c> currying</c><00:00:31.920><c> and</c>

00:00:32.120 --> 00:00:32.130 align:start position:0%
higher water functions currying and
 

00:00:32.130 --> 00:00:34.549 align:start position:0%
higher water functions currying and
closures<00:00:32.969><c> so</c><00:00:33.270><c> it's</c><00:00:33.420><c> a</c><00:00:33.480><c> very</c><00:00:33.719><c> useful</c><00:00:33.989><c> term</c><00:00:34.380><c> to</c>

00:00:34.549 --> 00:00:34.559 align:start position:0%
closures so it's a very useful term to
 

00:00:34.559 --> 00:00:36.979 align:start position:0%
closures so it's a very useful term to
note<00:00:34.739><c> ok</c><00:00:35.399><c> so</c><00:00:35.460><c> what</c><00:00:35.820><c> is</c><00:00:36.030><c> a</c><00:00:36.059><c> first</c><00:00:36.750><c> class</c>

00:00:36.979 --> 00:00:36.989 align:start position:0%
note ok so what is a first class
 

00:00:36.989 --> 00:00:38.720 align:start position:0%
note ok so what is a first class
function<00:00:37.620><c> if</c><00:00:38.010><c> you</c><00:00:38.219><c> look</c><00:00:38.370><c> up</c><00:00:38.520><c> the</c><00:00:38.610><c> definition</c>

00:00:38.720 --> 00:00:38.730 align:start position:0%
function if you look up the definition
 

00:00:38.730 --> 00:00:41.420 align:start position:0%
function if you look up the definition
on<00:00:39.329><c> Wikipedia</c><00:00:39.989><c> one</c><00:00:40.800><c> of</c><00:00:40.890><c> the</c><00:00:40.980><c> first</c><00:00:41.190><c> lines</c>

00:00:41.420 --> 00:00:41.430 align:start position:0%
on Wikipedia one of the first lines
 

00:00:41.430 --> 00:00:43.910 align:start position:0%
on Wikipedia one of the first lines
you'll<00:00:41.700><c> see</c><00:00:41.940><c> is</c><00:00:42.180><c> that</c><00:00:42.540><c> it</c><00:00:42.750><c> says</c><00:00:43.050><c> a</c><00:00:43.290><c> programming</c>

00:00:43.910 --> 00:00:43.920 align:start position:0%
you'll see is that it says a programming
 

00:00:43.920 --> 00:00:45.560 align:start position:0%
you'll see is that it says a programming
language<00:00:43.950><c> is</c><00:00:44.489><c> said</c><00:00:44.789><c> to</c><00:00:44.910><c> have</c><00:00:45.030><c> first-class</c>

00:00:45.560 --> 00:00:45.570 align:start position:0%
language is said to have first-class
 

00:00:45.570 --> 00:00:47.690 align:start position:0%
language is said to have first-class
functions<00:00:45.899><c> if</c><00:00:46.350><c> it</c><00:00:46.739><c> treats</c><00:00:47.039><c> functions</c><00:00:47.550><c> as</c>

00:00:47.690 --> 00:00:47.700 align:start position:0%
functions if it treats functions as
 

00:00:47.700 --> 00:00:50.000 align:start position:0%
functions if it treats functions as
first-class<00:00:48.210><c> citizens</c><00:00:49.200><c> and</c><00:00:49.710><c> then</c><00:00:49.829><c> if</c><00:00:49.920><c> you</c>

00:00:50.000 --> 00:00:50.010 align:start position:0%
first-class citizens and then if you
 

00:00:50.010 --> 00:00:51.590 align:start position:0%
first-class citizens and then if you
look<00:00:50.160><c> up</c><00:00:50.309><c> first-class</c><00:00:50.730><c> citizens</c><00:00:51.360><c> for</c>

00:00:51.590 --> 00:00:51.600 align:start position:0%
look up first-class citizens for
 

00:00:51.600 --> 00:00:53.900 align:start position:0%
look up first-class citizens for
programming<00:00:52.199><c> it</c><00:00:52.739><c> says</c><00:00:53.010><c> that</c><00:00:53.250><c> a</c><00:00:53.280><c> first-class</c>

00:00:53.900 --> 00:00:53.910 align:start position:0%
programming it says that a first-class
 

00:00:53.910 --> 00:00:56.180 align:start position:0%
programming it says that a first-class
citizen<00:00:54.300><c> some</c><00:00:55.079><c> kind</c><00:00:55.320><c> sometimes</c><00:00:55.890><c> called</c><00:00:56.129><c> a</c>

00:00:56.180 --> 00:00:56.190 align:start position:0%
citizen some kind sometimes called a
 

00:00:56.190 --> 00:00:58.069 align:start position:0%
citizen some kind sometimes called a
first-class<00:00:56.550><c> object</c><00:00:57.210><c> in</c><00:00:57.390><c> a</c><00:00:57.510><c> programming</c>

00:00:58.069 --> 00:00:58.079 align:start position:0%
first-class object in a programming
 

00:00:58.079 --> 00:01:00.860 align:start position:0%
first-class object in a programming
language<00:00:58.109><c> is</c><00:00:58.559><c> an</c><00:00:59.250><c> entity</c><00:00:59.640><c> which</c><00:00:59.940><c> supports</c><00:01:00.660><c> all</c>

00:01:00.860 --> 00:01:00.870 align:start position:0%
language is an entity which supports all
 

00:01:00.870 --> 00:01:03.170 align:start position:0%
language is an entity which supports all
the<00:01:00.930><c> operations</c><00:01:01.829><c> generally</c><00:01:02.460><c> available</c><00:01:02.820><c> to</c>

00:01:03.170 --> 00:01:03.180 align:start position:0%
the operations generally available to
 

00:01:03.180 --> 00:01:05.030 align:start position:0%
the operations generally available to
other<00:01:03.449><c> entities</c><00:01:03.690><c> these</c><00:01:04.379><c> operations</c>

00:01:05.030 --> 00:01:05.040 align:start position:0%
other entities these operations
 

00:01:05.040 --> 00:01:06.800 align:start position:0%
other entities these operations
typically<00:01:05.400><c> include</c><00:01:05.820><c> being</c><00:01:06.090><c> passed</c><00:01:06.390><c> as</c><00:01:06.659><c> an</c>

00:01:06.800 --> 00:01:06.810 align:start position:0%
typically include being passed as an
 

00:01:06.810 --> 00:01:08.960 align:start position:0%
typically include being passed as an
argument<00:01:06.960><c> returned</c><00:01:07.950><c> from</c><00:01:08.189><c> a</c><00:01:08.340><c> function</c><00:01:08.790><c> and</c>

00:01:08.960 --> 00:01:08.970 align:start position:0%
argument returned from a function and
 

00:01:08.970 --> 00:01:11.270 align:start position:0%
argument returned from a function and
assigned<00:01:09.450><c> to</c><00:01:09.630><c> a</c><00:01:09.689><c> variable</c><00:01:09.930><c> ok</c><00:01:10.860><c> so</c><00:01:10.950><c> what</c>

00:01:11.270 --> 00:01:11.280 align:start position:0%
assigned to a variable ok so what
 

00:01:11.280 --> 00:01:13.310 align:start position:0%
assigned to a variable ok so what
exactly<00:01:11.430><c> does</c><00:01:11.970><c> that</c><00:01:12.030><c> mean</c><00:01:12.210><c> so</c><00:01:12.960><c> that</c><00:01:12.990><c> means</c>

00:01:13.310 --> 00:01:13.320 align:start position:0%
exactly does that mean so that means
 

00:01:13.320 --> 00:01:14.660 align:start position:0%
exactly does that mean so that means
that<00:01:13.650><c> we</c><00:01:13.890><c> should</c><00:01:14.100><c> be</c><00:01:14.189><c> able</c><00:01:14.280><c> to</c><00:01:14.430><c> treat</c>

00:01:14.660 --> 00:01:14.670 align:start position:0%
that we should be able to treat
 

00:01:14.670 --> 00:01:16.999 align:start position:0%
that we should be able to treat
functions<00:01:15.240><c> just</c><00:01:15.570><c> like</c><00:01:15.720><c> any</c><00:01:16.020><c> other</c><00:01:16.229><c> object</c><00:01:16.350><c> or</c>

00:01:16.999 --> 00:01:17.009 align:start position:0%
functions just like any other object or
 

00:01:17.009 --> 00:01:19.370 align:start position:0%
functions just like any other object or
variable<00:01:17.490><c> so</c><00:01:18.240><c> I</c><00:01:18.570><c> think</c><00:01:18.810><c> this</c><00:01:18.960><c> will</c><00:01:19.049><c> be</c><00:01:19.170><c> more</c>

00:01:19.370 --> 00:01:19.380 align:start position:0%
variable so I think this will be more
 

00:01:19.380 --> 00:01:21.140 align:start position:0%
variable so I think this will be more
clear<00:01:19.710><c> once</c><00:01:19.979><c> we</c><00:01:20.130><c> take</c><00:01:20.310><c> a</c><00:01:20.340><c> look</c><00:01:20.610><c> at</c><00:01:20.759><c> these</c>

00:01:21.140 --> 00:01:21.150 align:start position:0%
clear once we take a look at these
 

00:01:21.150 --> 00:01:23.719 align:start position:0%
clear once we take a look at these
coding<00:01:21.540><c> examples</c><00:01:22.020><c> so</c><00:01:22.710><c> here</c><00:01:23.070><c> on</c><00:01:23.189><c> the</c><00:01:23.280><c> Left</c><00:01:23.490><c> I</c>

00:01:23.719 --> 00:01:23.729 align:start position:0%
coding examples so here on the Left I
 

00:01:23.729 --> 00:01:25.880 align:start position:0%
coding examples so here on the Left I
have<00:01:23.759><c> Python</c><00:01:24.360><c> and</c><00:01:24.900><c> here</c><00:01:25.259><c> on</c><00:01:25.380><c> the</c><00:01:25.470><c> right</c><00:01:25.500><c> I</c><00:01:25.680><c> have</c>

00:01:25.880 --> 00:01:25.890 align:start position:0%
have Python and here on the right I have
 

00:01:25.890 --> 00:01:27.980 align:start position:0%
have Python and here on the right I have
JavaScript<00:01:26.820><c> so</c><00:01:26.970><c> you</c><00:01:27.030><c> can</c><00:01:27.210><c> see</c><00:01:27.390><c> this</c><00:01:27.509><c> concept</c>

00:01:27.980 --> 00:01:27.990 align:start position:0%
JavaScript so you can see this concept
 

00:01:27.990 --> 00:01:30.289 align:start position:0%
JavaScript so you can see this concept
working<00:01:28.470><c> in</c><00:01:28.590><c> two</c><00:01:28.770><c> different</c><00:01:29.100><c> languages</c><00:01:29.340><c> ok</c><00:01:30.240><c> so</c>

00:01:30.289 --> 00:01:30.299 align:start position:0%
working in two different languages ok so
 

00:01:30.299 --> 00:01:32.899 align:start position:0%
working in two different languages ok so
first<00:01:30.750><c> of</c><00:01:30.960><c> all</c><00:01:31.110><c> let's</c><00:01:31.740><c> see</c><00:01:31.920><c> what</c><00:01:32.130><c> it</c><00:01:32.220><c> means</c><00:01:32.430><c> to</c>

00:01:32.899 --> 00:01:32.909 align:start position:0%
first of all let's see what it means to
 

00:01:32.909 --> 00:01:35.899 align:start position:0%
first of all let's see what it means to
assign<00:01:33.509><c> a</c><00:01:33.810><c> function</c><00:01:34.229><c> to</c><00:01:34.650><c> a</c><00:01:34.680><c> variable</c><00:01:34.799><c> now</c><00:01:35.700><c> this</c>

00:01:35.899 --> 00:01:35.909 align:start position:0%
assign a function to a variable now this
 

00:01:35.909 --> 00:01:37.940 align:start position:0%
assign a function to a variable now this
doesn't<00:01:36.240><c> mean</c><00:01:36.570><c> that</c><00:01:36.869><c> we</c><00:01:37.170><c> are</c><00:01:37.200><c> assigning</c><00:01:37.680><c> the</c>

00:01:37.940 --> 00:01:37.950 align:start position:0%
doesn't mean that we are assigning the
 

00:01:37.950 --> 00:01:39.560 align:start position:0%
doesn't mean that we are assigning the
result<00:01:38.430><c> of</c><00:01:38.700><c> the</c><00:01:38.880><c> function</c><00:01:39.060><c> to</c><00:01:39.479><c> a</c><00:01:39.509><c> variable</c>

00:01:39.560 --> 00:01:39.570 align:start position:0%
result of the function to a variable
 

00:01:39.570 --> 00:01:41.420 align:start position:0%
result of the function to a variable
this<00:01:40.439><c> is</c><00:01:40.619><c> where</c><00:01:40.799><c> some</c><00:01:41.009><c> people</c><00:01:41.130><c> get</c><00:01:41.400><c> confused</c>

00:01:41.420 --> 00:01:41.430 align:start position:0%
this is where some people get confused
 

00:01:41.430 --> 00:01:44.060 align:start position:0%
this is where some people get confused
so<00:01:42.299><c> and</c><00:01:42.630><c> the</c><00:01:42.840><c> example</c><00:01:43.290><c> I</c><00:01:43.320><c> have</c><00:01:43.350><c> pulled</c><00:01:43.680><c> up</c><00:01:43.829><c> here</c>

00:01:44.060 --> 00:01:44.070 align:start position:0%
so and the example I have pulled up here
 

00:01:44.070 --> 00:01:46.010 align:start position:0%
so and the example I have pulled up here
this<00:01:44.490><c> is</c><00:01:44.700><c> what</c><00:01:44.880><c> we're</c><00:01:45.030><c> used</c><00:01:45.270><c> to</c><00:01:45.390><c> doing</c><00:01:45.450><c> with</c>

00:01:46.010 --> 00:01:46.020 align:start position:0%
this is what we're used to doing with
 

00:01:46.020 --> 00:01:47.990 align:start position:0%
this is what we're used to doing with
functions<00:01:46.500><c> so</c><00:01:47.159><c> we</c><00:01:47.189><c> have</c><00:01:47.460><c> a</c><00:01:47.490><c> function</c><00:01:47.759><c> called</c>

00:01:47.990 --> 00:01:48.000 align:start position:0%
functions so we have a function called
 

00:01:48.000 --> 00:01:50.359 align:start position:0%
functions so we have a function called
Square<00:01:48.570><c> and</c><00:01:48.869><c> we're</c><00:01:49.290><c> setting</c><00:01:49.619><c> this</c><00:01:49.740><c> variable</c><00:01:50.220><c> F</c>

00:01:50.359 --> 00:01:50.369 align:start position:0%
Square and we're setting this variable F
 

00:01:50.369 --> 00:01:53.450 align:start position:0%
Square and we're setting this variable F
equal<00:01:51.030><c> to</c><00:01:51.180><c> the</c><00:01:51.299><c> square</c><00:01:51.659><c> of</c><00:01:51.899><c> 5</c><00:01:52.320><c> now</c><00:01:53.130><c> down</c><00:01:53.430><c> here</c>

00:01:53.450 --> 00:01:53.460 align:start position:0%
equal to the square of 5 now down here
 

00:01:53.460 --> 00:01:55.999 align:start position:0%
equal to the square of 5 now down here
on<00:01:53.850><c> this</c><00:01:54.060><c> line</c><00:01:54.329><c> I'm</c><00:01:54.630><c> printing</c><00:01:55.079><c> out</c><00:01:55.259><c> the</c>

00:01:55.999 --> 00:01:56.009 align:start position:0%
on this line I'm printing out the
 

00:01:56.009 --> 00:01:58.609 align:start position:0%
on this line I'm printing out the
function<00:01:56.820><c> Square</c><00:01:57.450><c> and</c><00:01:57.750><c> I'm</c><00:01:58.140><c> printing</c><00:01:58.439><c> out</c>

00:01:58.609 --> 00:01:58.619 align:start position:0%
function Square and I'm printing out
 

00:01:58.619 --> 00:02:00.679 align:start position:0%
function Square and I'm printing out
this<00:01:58.890><c> variable</c><00:01:59.250><c> F</c><00:01:59.579><c> so</c><00:02:00.210><c> I'm</c><00:02:00.270><c> going</c><00:02:00.450><c> to</c><00:02:00.509><c> go</c><00:02:00.600><c> ahead</c>

00:02:00.679 --> 00:02:00.689 align:start position:0%
this variable F so I'm going to go ahead
 

00:02:00.689 --> 00:02:02.090 align:start position:0%
this variable F so I'm going to go ahead
and<00:02:00.899><c> run</c><00:02:01.020><c> that</c><00:02:01.229><c> and</c><00:02:01.500><c> then</c><00:02:01.680><c> I'm</c><00:02:01.799><c> going</c><00:02:01.920><c> to</c><00:02:02.009><c> do</c>

00:02:02.090 --> 00:02:02.100 align:start position:0%
and run that and then I'm going to do
 

00:02:02.100 --> 00:02:04.730 align:start position:0%
and run that and then I'm going to do
the<00:02:02.219><c> same</c><00:02:02.460><c> thing</c><00:02:02.729><c> in</c><00:02:02.969><c> JavaScript</c><00:02:03.540><c> and</c><00:02:04.500><c> I'll</c><00:02:04.619><c> go</c>

00:02:04.730 --> 00:02:04.740 align:start position:0%
the same thing in JavaScript and I'll go
 

00:02:04.740 --> 00:02:06.560 align:start position:0%
the same thing in JavaScript and I'll go
ahead<00:02:04.829><c> and</c><00:02:05.009><c> run</c><00:02:05.189><c> that</c><00:02:05.399><c> so</c><00:02:06.149><c> you</c><00:02:06.240><c> can</c><00:02:06.390><c> see</c>

00:02:06.560 --> 00:02:06.570 align:start position:0%
ahead and run that so you can see
 

00:02:06.570 --> 00:02:08.719 align:start position:0%
ahead and run that so you can see
whenever<00:02:06.869><c> I</c><00:02:06.930><c> print</c><00:02:07.259><c> out</c><00:02:07.409><c> the</c><00:02:07.860><c> function</c><00:02:08.310><c> square</c>

00:02:08.719 --> 00:02:08.729 align:start position:0%
whenever I print out the function square
 

00:02:08.729 --> 00:02:11.420 align:start position:0%
whenever I print out the function square
you<00:02:09.720><c> can</c><00:02:09.840><c> see</c><00:02:10.050><c> that</c><00:02:10.200><c> it</c><00:02:10.319><c> prints</c><00:02:10.649><c> out</c><00:02:10.770><c> that</c><00:02:11.190><c> it</c>

00:02:11.420 --> 00:02:11.430 align:start position:0%
you can see that it prints out that it
 

00:02:11.430 --> 00:02:13.620 align:start position:0%
you can see that it prints out that it
is<00:02:11.610><c> a</c><00:02:11.790><c> function</c><00:02:12.330><c> called</c><00:02:12.540><c> square</c><00:02:12.900><c> now</c>

00:02:13.620 --> 00:02:13.630 align:start position:0%
is a function called square now
 

00:02:13.630 --> 00:02:16.380 align:start position:0%
is a function called square now
print<00:02:13.900><c> out</c><00:02:13.990><c> F</c><00:02:14.170><c> it's</c><00:02:14.950><c> printing</c><00:02:15.310><c> out</c><00:02:15.370><c> 25</c><00:02:16.030><c> and</c>

00:02:16.380 --> 00:02:16.390 align:start position:0%
print out F it's printing out 25 and
 

00:02:16.390 --> 00:02:18.330 align:start position:0%
print out F it's printing out 25 and
that's<00:02:16.570><c> because</c><00:02:16.870><c> we</c><00:02:16.990><c> passed</c><00:02:17.230><c> into</c><00:02:17.440><c> five</c><00:02:17.800><c> to</c>

00:02:18.330 --> 00:02:18.340 align:start position:0%
that's because we passed into five to
 

00:02:18.340 --> 00:02:20.370 align:start position:0%
that's because we passed into five to
the<00:02:18.790><c> square</c><00:02:19.180><c> function</c><00:02:19.570><c> and</c><00:02:19.750><c> that's</c><00:02:20.140><c> the</c><00:02:20.230><c> same</c>

00:02:20.370 --> 00:02:20.380 align:start position:0%
the square function and that's the same
 

00:02:20.380 --> 00:02:22.140 align:start position:0%
the square function and that's the same
thing<00:02:20.650><c> here</c><00:02:20.920><c> in</c><00:02:21.130><c> JavaScript</c><00:02:21.700><c> it's</c><00:02:21.850><c> printing</c>

00:02:22.140 --> 00:02:22.150 align:start position:0%
thing here in JavaScript it's printing
 

00:02:22.150 --> 00:02:24.210 align:start position:0%
thing here in JavaScript it's printing
out<00:02:22.240><c> the</c><00:02:22.450><c> function</c><00:02:22.900><c> square</c><00:02:23.260><c> that</c><00:02:23.830><c> we</c><00:02:23.980><c> logged</c>

00:02:24.210 --> 00:02:24.220 align:start position:0%
out the function square that we logged
 

00:02:24.220 --> 00:02:26.700 align:start position:0%
out the function square that we logged
out<00:02:24.430><c> and</c><00:02:24.700><c> we're</c><00:02:25.150><c> also</c><00:02:25.270><c> logging</c><00:02:25.870><c> F</c><00:02:26.110><c> which</c><00:02:26.500><c> is</c>

00:02:26.700 --> 00:02:26.710 align:start position:0%
out and we're also logging F which is
 

00:02:26.710 --> 00:02:28.830 align:start position:0%
out and we're also logging F which is
the<00:02:26.920><c> square</c><00:02:27.250><c> of</c><00:02:27.310><c> five</c><00:02:27.580><c> now</c><00:02:28.390><c> what</c><00:02:28.540><c> a</c><00:02:28.570><c> lot</c><00:02:28.750><c> of</c>

00:02:28.830 --> 00:02:28.840 align:start position:0%
the square of five now what a lot of
 

00:02:28.840 --> 00:02:30.870 align:start position:0%
the square of five now what a lot of
people<00:02:29.050><c> don't</c><00:02:29.140><c> realize</c><00:02:29.620><c> is</c><00:02:29.860><c> that</c><00:02:29.950><c> we</c><00:02:30.580><c> can</c>

00:02:30.870 --> 00:02:30.880 align:start position:0%
people don't realize is that we can
 

00:02:30.880 --> 00:02:33.780 align:start position:0%
people don't realize is that we can
remove<00:02:31.450><c> these</c><00:02:31.870><c> parentheses</c><00:02:32.560><c> here</c><00:02:32.890><c> and</c><00:02:33.040><c> set</c>

00:02:33.780 --> 00:02:33.790 align:start position:0%
remove these parentheses here and set
 

00:02:33.790 --> 00:02:36.630 align:start position:0%
remove these parentheses here and set
our<00:02:34.000><c> variable</c><00:02:34.540><c> F</c><00:02:34.720><c> to</c><00:02:35.440><c> the</c><00:02:35.590><c> square</c><00:02:35.890><c> function</c><00:02:36.250><c> so</c>

00:02:36.630 --> 00:02:36.640 align:start position:0%
our variable F to the square function so
 

00:02:36.640 --> 00:02:38.880 align:start position:0%
our variable F to the square function so
if<00:02:36.730><c> I</c><00:02:36.850><c> take</c><00:02:37.060><c> out</c><00:02:37.300><c> these</c><00:02:37.660><c> parentheses</c><00:02:38.380><c> and</c><00:02:38.650><c> save</c>

00:02:38.880 --> 00:02:38.890 align:start position:0%
if I take out these parentheses and save
 

00:02:38.890 --> 00:02:41.010 align:start position:0%
if I take out these parentheses and save
that<00:02:39.130><c> and</c><00:02:39.400><c> let</c><00:02:39.760><c> me</c><00:02:39.850><c> do</c><00:02:39.970><c> the</c><00:02:40.000><c> same</c><00:02:40.270><c> thing</c><00:02:40.570><c> here</c>

00:02:41.010 --> 00:02:41.020 align:start position:0%
that and let me do the same thing here
 

00:02:41.020 --> 00:02:43.770 align:start position:0%
that and let me do the same thing here
in<00:02:41.140><c> JavaScript</c><00:02:41.950><c> and</c><00:02:42.160><c> now</c><00:02:43.090><c> we</c><00:02:43.150><c> did</c><00:02:43.420><c> take</c><00:02:43.630><c> out</c>

00:02:43.770 --> 00:02:43.780 align:start position:0%
in JavaScript and now we did take out
 

00:02:43.780 --> 00:02:45.960 align:start position:0%
in JavaScript and now we did take out
those<00:02:43.960><c> parentheses</c><00:02:44.560><c> a</c><00:02:44.590><c> lot</c><00:02:44.830><c> of</c><00:02:44.920><c> people</c><00:02:45.190><c> get</c>

00:02:45.960 --> 00:02:45.970 align:start position:0%
those parentheses a lot of people get
 

00:02:45.970 --> 00:02:47.310 align:start position:0%
those parentheses a lot of people get
tripped<00:02:46.120><c> up</c><00:02:46.390><c> at</c><00:02:46.510><c> this</c><00:02:46.630><c> point</c><00:02:46.900><c> and</c><00:02:47.080><c> they</c><00:02:47.170><c> only</c>

00:02:47.310 --> 00:02:47.320 align:start position:0%
tripped up at this point and they only
 

00:02:47.320 --> 00:02:49.080 align:start position:0%
tripped up at this point and they only
take<00:02:47.440><c> out</c><00:02:47.770><c> the</c><00:02:47.920><c> arguments</c><00:02:48.460><c> and</c><00:02:48.580><c> they</c><00:02:48.670><c> leave</c><00:02:48.880><c> in</c>

00:02:49.080 --> 00:02:49.090 align:start position:0%
take out the arguments and they leave in
 

00:02:49.090 --> 00:02:51.030 align:start position:0%
take out the arguments and they leave in
the<00:02:49.120><c> parenthesis</c><00:02:49.750><c> but</c><00:02:49.930><c> you</c><00:02:50.590><c> don't</c><00:02:50.740><c> want</c><00:02:50.890><c> to</c><00:02:50.950><c> do</c>

00:02:51.030 --> 00:02:51.040 align:start position:0%
the parenthesis but you don't want to do
 

00:02:51.040 --> 00:02:52.440 align:start position:0%
the parenthesis but you don't want to do
that<00:02:51.190><c> because</c><00:02:51.400><c> the</c><00:02:51.610><c> parentheses</c><00:02:52.150><c> mean</c><00:02:52.330><c> that</c>

00:02:52.440 --> 00:02:52.450 align:start position:0%
that because the parentheses mean that
 

00:02:52.450 --> 00:02:53.940 align:start position:0%
that because the parentheses mean that
we're<00:02:52.540><c> going</c><00:02:52.630><c> to</c><00:02:52.690><c> execute</c><00:02:53.260><c> the</c><00:02:53.380><c> function</c><00:02:53.560><c> we</c>

00:02:53.940 --> 00:02:53.950 align:start position:0%
we're going to execute the function we
 

00:02:53.950 --> 00:02:55.620 align:start position:0%
we're going to execute the function we
don't<00:02:54.070><c> want</c><00:02:54.310><c> to</c><00:02:54.370><c> execute</c><00:02:54.670><c> the</c><00:02:54.910><c> function</c><00:02:55.240><c> we</c>

00:02:55.620 --> 00:02:55.630 align:start position:0%
don't want to execute the function we
 

00:02:55.630 --> 00:02:58.050 align:start position:0%
don't want to execute the function we
just<00:02:55.660><c> want</c><00:02:56.020><c> to</c><00:02:56.080><c> set</c><00:02:56.260><c> our</c><00:02:56.470><c> variable</c><00:02:56.920><c> F</c><00:02:57.160><c> equal</c><00:02:58.030><c> to</c>

00:02:58.050 --> 00:02:58.060 align:start position:0%
just want to set our variable F equal to
 

00:02:58.060 --> 00:03:00.930 align:start position:0%
just want to set our variable F equal to
the<00:02:58.600><c> function</c><00:02:59.020><c> not</c><00:02:59.320><c> executed</c><00:03:00.010><c> so</c><00:03:00.580><c> now</c><00:03:00.730><c> that</c><00:03:00.820><c> I</c>

00:03:00.930 --> 00:03:00.940 align:start position:0%
the function not executed so now that I
 

00:03:00.940 --> 00:03:03.810 align:start position:0%
the function not executed so now that I
have<00:03:01.000><c> my</c><00:03:01.240><c> variable</c><00:03:01.690><c> F</c><00:03:01.900><c> equal</c><00:03:02.440><c> to</c><00:03:02.470><c> square</c><00:03:03.070><c> what</c>

00:03:03.810 --> 00:03:03.820 align:start position:0%
have my variable F equal to square what
 

00:03:03.820 --> 00:03:07.170 align:start position:0%
have my variable F equal to square what
if<00:03:04.060><c> I</c><00:03:04.300><c> run</c><00:03:05.260><c> this</c><00:03:05.500><c> now</c><00:03:05.770><c> so</c><00:03:06.130><c> let</c><00:03:06.310><c> me</c><00:03:06.460><c> run</c><00:03:06.940><c> this</c>

00:03:07.170 --> 00:03:07.180 align:start position:0%
if I run this now so let me run this
 

00:03:07.180 --> 00:03:09.900 align:start position:0%
if I run this now so let me run this
code<00:03:07.680><c> so</c><00:03:08.680><c> now</c><00:03:08.860><c> you</c><00:03:08.920><c> can</c><00:03:09.130><c> see</c><00:03:09.340><c> that</c><00:03:09.610><c> when</c><00:03:09.820><c> it</c>

00:03:09.900 --> 00:03:09.910 align:start position:0%
code so now you can see that when it
 

00:03:09.910 --> 00:03:12.720 align:start position:0%
code so now you can see that when it
prints<00:03:10.240><c> out</c><00:03:10.360><c> F</c><00:03:10.630><c> F</c><00:03:11.020><c> is</c><00:03:11.560><c> equal</c><00:03:12.070><c> to</c><00:03:12.310><c> our</c><00:03:12.430><c> square</c>

00:03:12.720 --> 00:03:12.730 align:start position:0%
prints out F F is equal to our square
 

00:03:12.730 --> 00:03:14.820 align:start position:0%
prints out F F is equal to our square
function<00:03:12.940><c> so</c><00:03:13.570><c> this</c><00:03:13.750><c> is</c><00:03:13.960><c> one</c><00:03:14.110><c> of</c><00:03:14.230><c> the</c><00:03:14.290><c> aspects</c>

00:03:14.820 --> 00:03:14.830 align:start position:0%
function so this is one of the aspects
 

00:03:14.830 --> 00:03:16.350 align:start position:0%
function so this is one of the aspects
of<00:03:14.890><c> what</c><00:03:15.070><c> it</c><00:03:15.100><c> means</c><00:03:15.280><c> to</c><00:03:15.520><c> be</c><00:03:15.640><c> a</c><00:03:15.670><c> first-class</c>

00:03:16.350 --> 00:03:16.360 align:start position:0%
of what it means to be a first-class
 

00:03:16.360 --> 00:03:18.630 align:start position:0%
of what it means to be a first-class
function<00:03:17.260><c> so</c><00:03:17.680><c> now</c><00:03:17.710><c> we</c><00:03:17.920><c> can</c><00:03:18.220><c> treat</c><00:03:18.460><c> the</c>

00:03:18.630 --> 00:03:18.640 align:start position:0%
function so now we can treat the
 

00:03:18.640 --> 00:03:21.720 align:start position:0%
function so now we can treat the
variable<00:03:19.060><c> f</c><00:03:19.210><c> as</c><00:03:19.630><c> a</c><00:03:20.230><c> function</c><00:03:20.310><c> so</c><00:03:21.310><c> now</c><00:03:21.340><c> I</c><00:03:21.490><c> can</c>

00:03:21.720 --> 00:03:21.730 align:start position:0%
variable f as a function so now I can
 

00:03:21.730 --> 00:03:24.180 align:start position:0%
variable f as a function so now I can
use<00:03:21.760><c> f</c><00:03:22.150><c> just</c><00:03:22.420><c> like</c><00:03:22.630><c> I</c><00:03:22.750><c> would</c><00:03:22.840><c> use</c><00:03:23.050><c> square</c><00:03:23.680><c> so</c>

00:03:24.180 --> 00:03:24.190 align:start position:0%
use f just like I would use square so
 

00:03:24.190 --> 00:03:26.580 align:start position:0%
use f just like I would use square so
instead<00:03:24.790><c> of</c><00:03:24.910><c> printing</c><00:03:25.210><c> out</c><00:03:25.390><c> F</c><00:03:25.630><c> what</c><00:03:26.410><c> if</c><00:03:26.500><c> I</c>

00:03:26.580 --> 00:03:26.590 align:start position:0%
instead of printing out F what if I
 

00:03:26.590 --> 00:03:28.980 align:start position:0%
instead of printing out F what if I
print<00:03:26.800><c> out</c><00:03:26.950><c> f</c><00:03:27.190><c> of</c><00:03:27.300><c> five</c><00:03:28.300><c> and</c><00:03:28.600><c> I</c><00:03:28.660><c> run</c><00:03:28.840><c> it</c><00:03:28.960><c> just</c>

00:03:28.980 --> 00:03:28.990 align:start position:0%
print out f of five and I run it just
 

00:03:28.990 --> 00:03:31.560 align:start position:0%
print out f of five and I run it just
like<00:03:29.440><c> a</c><00:03:29.650><c> function</c><00:03:30.160><c> so</c><00:03:30.610><c> you</c><00:03:30.640><c> can</c><00:03:30.850><c> see</c><00:03:31.030><c> now</c><00:03:31.210><c> I</c><00:03:31.240><c> get</c>

00:03:31.560 --> 00:03:31.570 align:start position:0%
like a function so you can see now I get
 

00:03:31.570 --> 00:03:33.990 align:start position:0%
like a function so you can see now I get
25<00:03:32.050><c> there</c><00:03:32.410><c> if</c><00:03:32.860><c> I</c><00:03:33.070><c> do</c><00:03:33.130><c> the</c><00:03:33.310><c> same</c><00:03:33.460><c> thing</c><00:03:33.520><c> in</c>

00:03:33.990 --> 00:03:34.000 align:start position:0%
25 there if I do the same thing in
 

00:03:34.000 --> 00:03:38.220 align:start position:0%
25 there if I do the same thing in
JavaScript<00:03:34.660><c> then</c><00:03:35.620><c> I</c><00:03:35.980><c> will</c><00:03:36.280><c> get</c><00:03:36.880><c> 25</c><00:03:37.450><c> there</c><00:03:37.930><c> as</c>

00:03:38.220 --> 00:03:38.230 align:start position:0%
JavaScript then I will get 25 there as
 

00:03:38.230 --> 00:03:41.220 align:start position:0%
JavaScript then I will get 25 there as
well<00:03:38.470><c> so</c><00:03:38.680><c> so</c><00:03:39.400><c> far</c><00:03:39.640><c> we</c><00:03:39.880><c> assigned</c><00:03:40.330><c> a</c><00:03:40.600><c> function</c><00:03:41.080><c> to</c>

00:03:41.220 --> 00:03:41.230 align:start position:0%
well so so far we assigned a function to
 

00:03:41.230 --> 00:03:42.990 align:start position:0%
well so so far we assigned a function to
a<00:03:41.260><c> variable</c><00:03:41.350><c> but</c><00:03:42.190><c> we</c><00:03:42.310><c> can</c><00:03:42.459><c> also</c><00:03:42.610><c> pass</c>

00:03:42.990 --> 00:03:43.000 align:start position:0%
a variable but we can also pass
 

00:03:43.000 --> 00:03:45.570 align:start position:0%
a variable but we can also pass
functions<00:03:43.630><c> as</c><00:03:43.810><c> arguments</c><00:03:44.350><c> and</c><00:03:44.709><c> return</c>

00:03:45.570 --> 00:03:45.580 align:start position:0%
functions as arguments and return
 

00:03:45.580 --> 00:03:47.640 align:start position:0%
functions as arguments and return
functions<00:03:46.180><c> as</c><00:03:46.360><c> the</c><00:03:46.690><c> result</c><00:03:47.110><c> of</c><00:03:47.350><c> other</c>

00:03:47.640 --> 00:03:47.650 align:start position:0%
functions as the result of other
 

00:03:47.650 --> 00:03:50.310 align:start position:0%
functions as the result of other
functions<00:03:48.270><c> so</c><00:03:49.270><c> let's</c><00:03:49.450><c> take</c><00:03:49.600><c> a</c><00:03:49.630><c> look</c><00:03:49.870><c> at</c><00:03:50.050><c> both</c>

00:03:50.310 --> 00:03:50.320 align:start position:0%
functions so let's take a look at both
 

00:03:50.320 --> 00:03:52.830 align:start position:0%
functions so let's take a look at both
of<00:03:50.380><c> those</c><00:03:50.650><c> examples</c><00:03:51.100><c> and</c><00:03:51.400><c> by</c><00:03:52.090><c> the</c><00:03:52.150><c> way</c><00:03:52.390><c> if</c><00:03:52.690><c> a</c>

00:03:52.830 --> 00:03:52.840 align:start position:0%
of those examples and by the way if a
 

00:03:52.840 --> 00:03:55.230 align:start position:0%
of those examples and by the way if a
function<00:03:53.350><c> accepts</c><00:03:54.070><c> other</c><00:03:54.280><c> functions</c><00:03:55.060><c> as</c>

00:03:55.230 --> 00:03:55.240 align:start position:0%
function accepts other functions as
 

00:03:55.240 --> 00:03:58.199 align:start position:0%
function accepts other functions as
arguments<00:03:55.660><c> or</c><00:03:56.020><c> returns</c><00:03:56.920><c> functions</c><00:03:57.490><c> as</c><00:03:57.640><c> their</c>

00:03:58.199 --> 00:03:58.209 align:start position:0%
arguments or returns functions as their
 

00:03:58.209 --> 00:04:00.000 align:start position:0%
arguments or returns functions as their
result<00:03:58.660><c> that's</c><00:03:59.230><c> what</c><00:03:59.500><c> you</c><00:03:59.590><c> call</c><00:03:59.800><c> a</c>

00:04:00.000 --> 00:04:00.010 align:start position:0%
result that's what you call a
 

00:04:00.010 --> 00:04:02.160 align:start position:0%
result that's what you call a
higher-order<00:04:00.340><c> function</c><00:04:01.150><c> so</c><00:04:01.690><c> first</c><00:04:01.959><c> let's</c>

00:04:02.160 --> 00:04:02.170 align:start position:0%
higher-order function so first let's
 

00:04:02.170 --> 00:04:04.410 align:start position:0%
higher-order function so first let's
look<00:04:02.230><c> at</c><00:04:02.530><c> an</c><00:04:02.680><c> example</c><00:04:02.770><c> of</c><00:04:03.340><c> passing</c><00:04:03.940><c> a</c><00:04:04.120><c> function</c>

00:04:04.410 --> 00:04:04.420 align:start position:0%
look at an example of passing a function
 

00:04:04.420 --> 00:04:07.110 align:start position:0%
look at an example of passing a function
as<00:04:04.810><c> an</c><00:04:05.050><c> argument</c><00:04:05.230><c> to</c><00:04:05.680><c> another</c><00:04:05.950><c> function</c><00:04:06.250><c> so</c><00:04:07.090><c> a</c>

00:04:07.110 --> 00:04:07.120 align:start position:0%
as an argument to another function so a
 

00:04:07.120 --> 00:04:08.970 align:start position:0%
as an argument to another function so a
great<00:04:07.360><c> example</c><00:04:07.630><c> of</c><00:04:07.870><c> this</c><00:04:08.080><c> is</c><00:04:08.260><c> the</c><00:04:08.740><c> map</c>

00:04:08.970 --> 00:04:08.980 align:start position:0%
great example of this is the map
 

00:04:08.980 --> 00:04:11.310 align:start position:0%
great example of this is the map
function<00:04:09.400><c> in</c><00:04:09.820><c> both</c><00:04:10.150><c> Python</c><00:04:10.930><c> and</c><00:04:11.200><c> in</c>

00:04:11.310 --> 00:04:11.320 align:start position:0%
function in both Python and in
 

00:04:11.320 --> 00:04:13.740 align:start position:0%
function in both Python and in
JavaScript<00:04:11.860><c> so</c><00:04:12.310><c> the</c><00:04:12.430><c> map</c><00:04:12.580><c> function</c><00:04:13.150><c> takes</c><00:04:13.510><c> a</c>

00:04:13.740 --> 00:04:13.750 align:start position:0%
JavaScript so the map function takes a
 

00:04:13.750 --> 00:04:16.740 align:start position:0%
JavaScript so the map function takes a
function<00:04:14.410><c> and</c><00:04:14.620><c> an</c><00:04:14.860><c> array</c><00:04:15.220><c> as</c><00:04:15.490><c> its</c><00:04:16.209><c> arguments</c>

00:04:16.740 --> 00:04:16.750 align:start position:0%
function and an array as its arguments
 

00:04:16.750 --> 00:04:19.050 align:start position:0%
function and an array as its arguments
and<00:04:16.900><c> it</c><00:04:17.290><c> runs</c><00:04:17.530><c> each</c><00:04:17.830><c> value</c><00:04:18.459><c> of</c><00:04:18.609><c> that</c><00:04:18.760><c> array</c>

00:04:19.050 --> 00:04:19.060 align:start position:0%
and it runs each value of that array
 

00:04:19.060 --> 00:04:21.539 align:start position:0%
and it runs each value of that array
through<00:04:19.810><c> the</c><00:04:19.989><c> provided</c><00:04:20.500><c> function</c><00:04:20.920><c> and</c><00:04:21.100><c> then</c>

00:04:21.539 --> 00:04:21.549 align:start position:0%
through the provided function and then
 

00:04:21.549 --> 00:04:24.719 align:start position:0%
through the provided function and then
returns<00:04:21.970><c> a</c><00:04:22.240><c> new</c><00:04:22.600><c> array</c><00:04:22.900><c> of</c><00:04:23.200><c> those</c><00:04:23.440><c> results</c><00:04:24.100><c> so</c>

00:04:24.719 --> 00:04:24.729 align:start position:0%
returns a new array of those results so
 

00:04:24.729 --> 00:04:26.190 align:start position:0%
returns a new array of those results so
I<00:04:24.760><c> think</c><00:04:24.910><c> that</c><00:04:25.120><c> will</c><00:04:25.210><c> be</c><00:04:25.240><c> more</c><00:04:25.540><c> clear</c><00:04:25.900><c> if</c><00:04:26.169><c> we</c>

00:04:26.190 --> 00:04:26.200 align:start position:0%
I think that will be more clear if we
 

00:04:26.200 --> 00:04:27.470 align:start position:0%
I think that will be more clear if we
take<00:04:26.470><c> a</c><00:04:26.680><c> look</c><00:04:26.919><c> at</c><00:04:27.130><c> an</c>

00:04:27.470 --> 00:04:27.480 align:start position:0%
take a look at an
 

00:04:27.480 --> 00:04:31.550 align:start position:0%
take a look at an
example<00:04:27.870><c> here</c><00:04:28.020><c> so</c><00:04:28.980><c> I</c><00:04:29.370><c> have</c><00:04:29.640><c> a</c><00:04:29.990><c> sample</c><00:04:30.990><c> map</c>

00:04:31.550 --> 00:04:31.560 align:start position:0%
example here so I have a sample map
 

00:04:31.560 --> 00:04:33.590 align:start position:0%
example here so I have a sample map
function<00:04:32.100><c> here</c><00:04:32.340><c> this</c><00:04:32.610><c> isn't</c><00:04:33.000><c> the</c><00:04:33.120><c> built-in</c>

00:04:33.590 --> 00:04:33.600 align:start position:0%
function here this isn't the built-in
 

00:04:33.600 --> 00:04:35.660 align:start position:0%
function here this isn't the built-in
map<00:04:33.900><c> function</c><00:04:34.380><c> but</c><00:04:35.100><c> what</c><00:04:35.190><c> we're</c><00:04:35.340><c> going</c><00:04:35.370><c> to</c><00:04:35.550><c> do</c>

00:04:35.660 --> 00:04:35.670 align:start position:0%
map function but what we're going to do
 

00:04:35.670 --> 00:04:37.850 align:start position:0%
map function but what we're going to do
is<00:04:35.850><c> just</c><00:04:36.060><c> build</c><00:04:36.270><c> our</c><00:04:36.480><c> own</c><00:04:36.510><c> from</c><00:04:36.930><c> scratch</c><00:04:37.110><c> so</c>

00:04:37.850 --> 00:04:37.860 align:start position:0%
is just build our own from scratch so
 

00:04:37.860 --> 00:04:39.680 align:start position:0%
is just build our own from scratch so
that<00:04:38.010><c> way</c><00:04:38.160><c> we</c><00:04:38.340><c> can</c><00:04:38.460><c> see</c><00:04:38.730><c> exactly</c><00:04:39.240><c> what's</c><00:04:39.600><c> going</c>

00:04:39.680 --> 00:04:39.690 align:start position:0%
that way we can see exactly what's going
 

00:04:39.690 --> 00:04:43.040 align:start position:0%
that way we can see exactly what's going
on<00:04:40.020><c> okay</c><00:04:40.680><c> so</c><00:04:40.740><c> let</c><00:04:41.100><c> me</c><00:04:41.280><c> take</c><00:04:41.820><c> out</c><00:04:42.090><c> all</c><00:04:42.660><c> these</c><00:04:42.990><c> old</c>

00:04:43.040 --> 00:04:43.050 align:start position:0%
on okay so let me take out all these old
 

00:04:43.050 --> 00:04:46.400 align:start position:0%
on okay so let me take out all these old
variables<00:04:43.860><c> here</c><00:04:44.130><c> and</c><00:04:44.360><c> uncomment</c><00:04:45.360><c> out</c><00:04:45.660><c> this</c>

00:04:46.400 --> 00:04:46.410 align:start position:0%
variables here and uncomment out this
 

00:04:46.410 --> 00:04:48.980 align:start position:0%
variables here and uncomment out this
and<00:04:46.740><c> I'll</c><00:04:47.190><c> push</c><00:04:47.430><c> these</c><00:04:47.910><c> down</c><00:04:47.970><c> for</c><00:04:48.600><c> now</c><00:04:48.690><c> and</c><00:04:48.900><c> let</c>

00:04:48.980 --> 00:04:48.990 align:start position:0%
and I'll push these down for now and let
 

00:04:48.990 --> 00:04:51.550 align:start position:0%
and I'll push these down for now and let
me<00:04:49.110><c> do</c><00:04:49.230><c> the</c><00:04:49.260><c> same</c><00:04:49.560><c> thing</c><00:04:50.040><c> over</c><00:04:50.730><c> here</c><00:04:50.970><c> in</c>

00:04:51.550 --> 00:04:51.560 align:start position:0%
me do the same thing over here in
 

00:04:51.560 --> 00:04:55.280 align:start position:0%
me do the same thing over here in
JavaScript<00:04:52.560><c> so</c><00:04:52.800><c> let</c><00:04:53.340><c> me</c><00:04:53.400><c> go</c><00:04:53.520><c> ahead</c><00:04:53.610><c> and</c><00:04:54.290><c> move</c>

00:04:55.280 --> 00:04:55.290 align:start position:0%
JavaScript so let me go ahead and move
 

00:04:55.290 --> 00:04:58.100 align:start position:0%
JavaScript so let me go ahead and move
these<00:04:55.800><c> up</c><00:04:56.100><c> okay</c><00:04:57.090><c> let</c><00:04:57.300><c> me</c><00:04:57.390><c> go</c><00:04:57.510><c> ahead</c><00:04:57.630><c> and</c>

00:04:58.100 --> 00:04:58.110 align:start position:0%
these up okay let me go ahead and
 

00:04:58.110 --> 00:05:01.940 align:start position:0%
these up okay let me go ahead and
uncomment<00:04:59.010><c> out</c><00:04:59.250><c> this</c><00:04:59.550><c> code</c><00:04:59.850><c> here</c><00:05:00.750><c> okay</c><00:05:01.680><c> so</c><00:05:01.710><c> we</c>

00:05:01.940 --> 00:05:01.950 align:start position:0%
uncomment out this code here okay so we
 

00:05:01.950 --> 00:05:04.670 align:start position:0%
uncomment out this code here okay so we
have<00:05:02.130><c> a</c><00:05:02.340><c> custom</c><00:05:02.940><c> built</c><00:05:03.210><c> map</c><00:05:03.960><c> function</c><00:05:04.440><c> here</c>

00:05:04.670 --> 00:05:04.680 align:start position:0%
have a custom built map function here
 

00:05:04.680 --> 00:05:06.950 align:start position:0%
have a custom built map function here
which<00:05:04.800><c> is</c><00:05:05.070><c> going</c><00:05:05.310><c> to</c><00:05:05.400><c> behave</c><00:05:05.690><c> kind</c><00:05:06.690><c> of</c><00:05:06.810><c> like</c>

00:05:06.950 --> 00:05:06.960 align:start position:0%
which is going to behave kind of like
 

00:05:06.960 --> 00:05:09.080 align:start position:0%
which is going to behave kind of like
the<00:05:07.110><c> built-in</c><00:05:07.530><c> map</c><00:05:07.770><c> function</c><00:05:08.220><c> and</c><00:05:08.400><c> what</c><00:05:08.940><c> we're</c>

00:05:09.080 --> 00:05:09.090 align:start position:0%
the built-in map function and what we're
 

00:05:09.090 --> 00:05:12.140 align:start position:0%
the built-in map function and what we're
doing<00:05:09.120><c> is</c><00:05:09.510><c> we</c><00:05:09.750><c> are</c><00:05:09.780><c> taking</c><00:05:10.650><c> in</c><00:05:11.100><c> a</c><00:05:11.280><c> function</c><00:05:12.000><c> as</c>

00:05:12.140 --> 00:05:12.150 align:start position:0%
doing is we are taking in a function as
 

00:05:12.150 --> 00:05:14.480 align:start position:0%
doing is we are taking in a function as
an<00:05:12.570><c> argument</c><00:05:12.750><c> and</c><00:05:13.170><c> then</c><00:05:13.260><c> we're</c><00:05:13.800><c> taking</c><00:05:13.920><c> in</c><00:05:14.310><c> an</c>

00:05:14.480 --> 00:05:14.490 align:start position:0%
an argument and then we're taking in an
 

00:05:14.490 --> 00:05:16.610 align:start position:0%
an argument and then we're taking in an
array<00:05:14.940><c> as</c><00:05:15.180><c> an</c><00:05:15.300><c> argument</c><00:05:15.630><c> and</c><00:05:15.810><c> then</c><00:05:16.260><c> here</c><00:05:16.470><c> we're</c>

00:05:16.610 --> 00:05:16.620 align:start position:0%
array as an argument and then here we're
 

00:05:16.620 --> 00:05:18.320 align:start position:0%
array as an argument and then here we're
going<00:05:16.710><c> to</c><00:05:16.770><c> create</c><00:05:16.980><c> an</c><00:05:17.340><c> empty</c><00:05:17.610><c> result</c><00:05:18.210><c> array</c>

00:05:18.320 --> 00:05:18.330 align:start position:0%
going to create an empty result array
 

00:05:18.330 --> 00:05:21.740 align:start position:0%
going to create an empty result array
loop<00:05:19.200><c> through</c><00:05:19.560><c> all</c><00:05:19.830><c> of</c><00:05:19.890><c> the</c><00:05:20.430><c> items</c><00:05:20.880><c> in</c><00:05:21.120><c> the</c>

00:05:21.740 --> 00:05:21.750 align:start position:0%
loop through all of the items in the
 

00:05:21.750 --> 00:05:24.590 align:start position:0%
loop through all of the items in the
passed<00:05:22.080><c> an</c><00:05:22.320><c> array</c><00:05:22.590><c> and</c><00:05:22.940><c> run</c><00:05:23.940><c> each</c><00:05:24.240><c> of</c><00:05:24.480><c> those</c>

00:05:24.590 --> 00:05:24.600 align:start position:0%
passed an array and run each of those
 

00:05:24.600 --> 00:05:26.720 align:start position:0%
passed an array and run each of those
items<00:05:24.930><c> through</c><00:05:25.710><c> the</c><00:05:25.890><c> function</c><00:05:26.340><c> that</c><00:05:26.610><c> we</c>

00:05:26.720 --> 00:05:26.730 align:start position:0%
items through the function that we
 

00:05:26.730 --> 00:05:28.700 align:start position:0%
items through the function that we
passed<00:05:26.970><c> in</c><00:05:27.180><c> as</c><00:05:27.360><c> an</c><00:05:27.480><c> argument</c><00:05:27.660><c> and</c><00:05:28.020><c> append</c><00:05:28.680><c> that</c>

00:05:28.700 --> 00:05:28.710 align:start position:0%
passed in as an argument and append that
 

00:05:28.710 --> 00:05:30.680 align:start position:0%
passed in as an argument and append that
to<00:05:28.830><c> the</c><00:05:29.070><c> result</c><00:05:29.430><c> and</c><00:05:29.610><c> then</c><00:05:30.090><c> after</c><00:05:30.420><c> we're</c><00:05:30.570><c> done</c>

00:05:30.680 --> 00:05:30.690 align:start position:0%
to the result and then after we're done
 

00:05:30.690 --> 00:05:32.420 align:start position:0%
to the result and then after we're done
we're<00:05:30.930><c> going</c><00:05:31.020><c> to</c><00:05:31.110><c> return</c><00:05:31.350><c> the</c><00:05:31.530><c> result</c><00:05:31.680><c> so</c><00:05:32.400><c> you</c>

00:05:32.420 --> 00:05:32.430 align:start position:0%
we're going to return the result so you
 

00:05:32.430 --> 00:05:34.310 align:start position:0%
we're going to return the result so you
can<00:05:32.640><c> see</c><00:05:32.760><c> here</c><00:05:32.940><c> I</c><00:05:32.970><c> have</c><00:05:33.120><c> an</c><00:05:33.240><c> example</c><00:05:33.600><c> where</c><00:05:34.170><c> I'm</c>

00:05:34.310 --> 00:05:34.320 align:start position:0%
can see here I have an example where I'm
 

00:05:34.320 --> 00:05:37.460 align:start position:0%
can see here I have an example where I'm
setting<00:05:34.770><c> this</c><00:05:35.100><c> squares</c><00:05:35.880><c> variable</c><00:05:36.510><c> equal</c><00:05:37.260><c> to</c>

00:05:37.460 --> 00:05:37.470 align:start position:0%
setting this squares variable equal to
 

00:05:37.470 --> 00:05:40.400 align:start position:0%
setting this squares variable equal to
the<00:05:37.890><c> my</c><00:05:38.130><c> map</c><00:05:38.400><c> function</c><00:05:38.910><c> I'm</c><00:05:39.060><c> passing</c><00:05:39.930><c> in</c><00:05:40.080><c> the</c>

00:05:40.400 --> 00:05:40.410 align:start position:0%
the my map function I'm passing in the
 

00:05:40.410 --> 00:05:42.800 align:start position:0%
the my map function I'm passing in the
square<00:05:40.830><c> function</c><00:05:41.340><c> that</c><00:05:41.730><c> we</c><00:05:41.880><c> created</c><00:05:42.240><c> up</c><00:05:42.450><c> here</c>

00:05:42.800 --> 00:05:42.810 align:start position:0%
square function that we created up here
 

00:05:42.810 --> 00:05:45.020 align:start position:0%
square function that we created up here
and<00:05:42.960><c> then</c><00:05:43.410><c> I'm</c><00:05:43.530><c> also</c><00:05:43.710><c> passing</c><00:05:44.250><c> in</c><00:05:44.400><c> a</c><00:05:44.580><c> list</c><00:05:44.880><c> of</c>

00:05:45.020 --> 00:05:45.030 align:start position:0%
and then I'm also passing in a list of
 

00:05:45.030 --> 00:05:48.890 align:start position:0%
and then I'm also passing in a list of
values<00:05:45.450><c> from</c><00:05:45.810><c> 1</c><00:05:46.230><c> to</c><00:05:46.380><c> 5</c><00:05:46.590><c> and</c><00:05:46.920><c> again</c><00:05:47.700><c> both</c><00:05:48.540><c> here</c>

00:05:48.890 --> 00:05:48.900 align:start position:0%
values from 1 to 5 and again both here
 

00:05:48.900 --> 00:05:51.680 align:start position:0%
values from 1 to 5 and again both here
and<00:05:49.080><c> Python</c><00:05:49.710><c> and</c><00:05:49.740><c> in</c><00:05:50.100><c> JavaScript</c><00:05:50.760><c> notice</c><00:05:51.450><c> that</c>

00:05:51.680 --> 00:05:51.690 align:start position:0%
and Python and in JavaScript notice that
 

00:05:51.690 --> 00:05:54.350 align:start position:0%
and Python and in JavaScript notice that
I'm<00:05:51.960><c> not</c><00:05:52.020><c> using</c><00:05:52.620><c> the</c><00:05:53.100><c> parentheses</c><00:05:53.460><c> when</c><00:05:54.330><c> I</c>

00:05:54.350 --> 00:05:54.360 align:start position:0%
I'm not using the parentheses when I
 

00:05:54.360 --> 00:05:56.690 align:start position:0%
I'm not using the parentheses when I
pass<00:05:54.690><c> this</c><00:05:54.990><c> square</c><00:05:55.320><c> function</c><00:05:55.560><c> in</c><00:05:56.010><c> to</c><00:05:56.580><c> this</c>

00:05:56.690 --> 00:05:56.700 align:start position:0%
pass this square function in to this
 

00:05:56.700 --> 00:05:58.580 align:start position:0%
pass this square function in to this
other<00:05:56.970><c> function</c><00:05:57.480><c> because</c><00:05:58.050><c> adding</c><00:05:58.470><c> the</c>

00:05:58.580 --> 00:05:58.590 align:start position:0%
other function because adding the
 

00:05:58.590 --> 00:06:00.650 align:start position:0%
other function because adding the
parentheses<00:05:59.160><c> would</c><00:05:59.640><c> try</c><00:05:59.880><c> to</c><00:05:59.940><c> execute</c><00:06:00.390><c> the</c>

00:06:00.650 --> 00:06:00.660 align:start position:0%
parentheses would try to execute the
 

00:06:00.660 --> 00:06:02.270 align:start position:0%
parentheses would try to execute the
function<00:06:01.050><c> and</c><00:06:01.230><c> that's</c><00:06:01.350><c> not</c><00:06:01.620><c> where</c><00:06:01.770><c> what</c><00:06:02.100><c> we're</c>

00:06:02.270 --> 00:06:02.280 align:start position:0%
function and that's not where what we're
 

00:06:02.280 --> 00:06:02.810 align:start position:0%
function and that's not where what we're
doing<00:06:02.520><c> here</c>

00:06:02.810 --> 00:06:02.820 align:start position:0%
doing here
 

00:06:02.820 --> 00:06:05.330 align:start position:0%
doing here
we<00:06:03.150><c> aren't</c><00:06:03.510><c> executing</c><00:06:04.200><c> the</c><00:06:04.290><c> function</c><00:06:04.440><c> until</c>

00:06:05.330 --> 00:06:05.340 align:start position:0%
we aren't executing the function until
 

00:06:05.340 --> 00:06:08.600 align:start position:0%
we aren't executing the function until
this<00:06:05.580><c> line</c><00:06:05.850><c> here</c><00:06:06.660><c> within</c><00:06:07.230><c> our</c><00:06:07.650><c> map</c><00:06:08.130><c> function</c>

00:06:08.600 --> 00:06:08.610 align:start position:0%
this line here within our map function
 

00:06:08.610 --> 00:06:11.210 align:start position:0%
this line here within our map function
so<00:06:09.180><c> let</c><00:06:09.330><c> me</c><00:06:09.420><c> go</c><00:06:09.540><c> ahead</c><00:06:09.660><c> and</c><00:06:09.810><c> run</c><00:06:10.530><c> this</c><00:06:10.770><c> so</c><00:06:11.070><c> that</c>

00:06:11.210 --> 00:06:11.220 align:start position:0%
so let me go ahead and run this so that
 

00:06:11.220 --> 00:06:13.610 align:start position:0%
so let me go ahead and run this so that
you<00:06:11.340><c> can</c><00:06:11.490><c> see</c><00:06:11.760><c> the</c><00:06:11.970><c> results</c><00:06:12.510><c> whenever</c><00:06:13.200><c> we</c><00:06:13.470><c> pass</c>

00:06:13.610 --> 00:06:13.620 align:start position:0%
you can see the results whenever we pass
 

00:06:13.620 --> 00:06:16.610 align:start position:0%
you can see the results whenever we pass
in<00:06:13.950><c> this</c><00:06:14.370><c> list</c><00:06:14.880><c> and</c><00:06:15.150><c> the</c><00:06:15.690><c> square</c><00:06:15.990><c> function</c><00:06:16.230><c> to</c>

00:06:16.610 --> 00:06:16.620 align:start position:0%
in this list and the square function to
 

00:06:16.620 --> 00:06:18.350 align:start position:0%
in this list and the square function to
our<00:06:16.740><c> map</c><00:06:17.040><c> function</c><00:06:17.520><c> so</c><00:06:17.670><c> you</c><00:06:17.730><c> can</c><00:06:17.910><c> see</c><00:06:18.060><c> here</c><00:06:18.240><c> we</c>

00:06:18.350 --> 00:06:18.360 align:start position:0%
our map function so you can see here we
 

00:06:18.360 --> 00:06:20.180 align:start position:0%
our map function so you can see here we
printed<00:06:18.690><c> out</c><00:06:18.780><c> the</c><00:06:18.930><c> squares</c><00:06:19.230><c> it</c><00:06:19.770><c> took</c><00:06:20.040><c> this</c>

00:06:20.180 --> 00:06:20.190 align:start position:0%
printed out the squares it took this
 

00:06:20.190 --> 00:06:22.670 align:start position:0%
printed out the squares it took this
list<00:06:20.550><c> of</c><00:06:20.820><c> 1</c><00:06:21.030><c> through</c><00:06:21.270><c> 5</c><00:06:21.510><c> and</c><00:06:21.900><c> squared</c><00:06:22.230><c> all</c><00:06:22.530><c> of</c>

00:06:22.670 --> 00:06:22.680 align:start position:0%
list of 1 through 5 and squared all of
 

00:06:22.680 --> 00:06:25.190 align:start position:0%
list of 1 through 5 and squared all of
those<00:06:22.830><c> numbers</c><00:06:23.250><c> and</c><00:06:23.400><c> if</c><00:06:23.910><c> I</c><00:06:24.000><c> do</c><00:06:24.060><c> that</c><00:06:24.390><c> over</c><00:06:24.600><c> here</c>

00:06:25.190 --> 00:06:25.200 align:start position:0%
those numbers and if I do that over here
 

00:06:25.200 --> 00:06:26.930 align:start position:0%
those numbers and if I do that over here
in<00:06:25.410><c> JavaScript</c><00:06:26.040><c> then</c><00:06:26.190><c> it</c><00:06:26.310><c> does</c><00:06:26.490><c> the</c><00:06:26.760><c> same</c>

00:06:26.930 --> 00:06:26.940 align:start position:0%
in JavaScript then it does the same
 

00:06:26.940 --> 00:06:29.570 align:start position:0%
in JavaScript then it does the same
thing<00:06:27.000><c> and</c><00:06:27.930><c> actually</c><00:06:28.320><c> to</c><00:06:28.590><c> get</c><00:06:29.280><c> the</c><00:06:29.400><c> same</c>

00:06:29.570 --> 00:06:29.580 align:start position:0%
thing and actually to get the same
 

00:06:29.580 --> 00:06:31.130 align:start position:0%
thing and actually to get the same
result<00:06:29.910><c> here</c><00:06:30.270><c> I'm</c><00:06:30.420><c> going</c><00:06:30.540><c> to</c><00:06:30.630><c> have</c><00:06:30.720><c> to</c><00:06:30.870><c> start</c>

00:06:31.130 --> 00:06:31.140 align:start position:0%
result here I'm going to have to start
 

00:06:31.140 --> 00:06:34.430 align:start position:0%
result here I'm going to have to start
at<00:06:31.350><c> 1</c><00:06:31.830><c> and</c><00:06:31.860><c> go</c><00:06:32.160><c> to</c><00:06:32.940><c> the</c><00:06:33.210><c> end</c><00:06:33.390><c> of</c><00:06:33.540><c> that</c><00:06:33.570><c> so</c><00:06:33.990><c> let</c><00:06:34.320><c> me</c>

00:06:34.430 --> 00:06:34.440 align:start position:0%
at 1 and go to the end of that so let me
 

00:06:34.440 --> 00:06:36.410 align:start position:0%
at 1 and go to the end of that so let me
save<00:06:34.680><c> that</c><00:06:34.710><c> and</c><00:06:35.070><c> rerun</c><00:06:35.400><c> it</c><00:06:35.550><c> okay</c><00:06:36.060><c> so</c><00:06:36.120><c> now</c><00:06:36.360><c> you</c>

00:06:36.410 --> 00:06:36.420 align:start position:0%
save that and rerun it okay so now you
 

00:06:36.420 --> 00:06:38.120 align:start position:0%
save that and rerun it okay so now you
can<00:06:36.690><c> see</c><00:06:36.840><c> that</c><00:06:37.020><c> we're</c><00:06:37.140><c> getting</c><00:06:37.440><c> the</c><00:06:37.950><c> same</c>

00:06:38.120 --> 00:06:38.130 align:start position:0%
can see that we're getting the same
 

00:06:38.130 --> 00:06:41.239 align:start position:0%
can see that we're getting the same
results<00:06:38.580><c> okay</c><00:06:39.240><c> so</c><00:06:39.300><c> this</c><00:06:39.660><c> is</c><00:06:39.840><c> useful</c><00:06:40.080><c> because</c>

00:06:41.239 --> 00:06:41.249 align:start position:0%
results okay so this is useful because
 

00:06:41.249 --> 00:06:44.029 align:start position:0%
results okay so this is useful because
now<00:06:41.339><c> we</c><00:06:41.399><c> can</c><00:06:41.639><c> pass</c><00:06:41.789><c> any</c><00:06:42.149><c> function</c><00:06:42.779><c> into</c><00:06:43.619><c> our</c>

00:06:44.029 --> 00:06:44.039 align:start position:0%
now we can pass any function into our
 

00:06:44.039 --> 00:06:46.429 align:start position:0%
now we can pass any function into our
custom<00:06:44.549><c> map</c><00:06:44.969><c> function</c><00:06:45.419><c> that</c><00:06:45.509><c> we</c><00:06:45.659><c> created</c><00:06:45.959><c> so</c>

00:06:46.429 --> 00:06:46.439 align:start position:0%
custom map function that we created so
 

00:06:46.439 --> 00:06:49.339 align:start position:0%
custom map function that we created so
for<00:06:46.649><c> example</c><00:06:47.039><c> I</c><00:06:47.129><c> have</c><00:06:47.339><c> a</c><00:06:47.659><c> cube</c><00:06:48.659><c> function</c><00:06:49.169><c> down</c>

00:06:49.339 --> 00:06:49.349 align:start position:0%
for example I have a cube function down
 

00:06:49.349 --> 00:06:52.309 align:start position:0%
for example I have a cube function down
here<00:06:49.679><c> now</c><00:06:50.189><c> let</c><00:06:50.759><c> me</c><00:06:50.849><c> grab</c><00:06:51.059><c> this</c><00:06:51.479><c> cube</c><00:06:51.899><c> function</c>

00:06:52.309 --> 00:06:52.319 align:start position:0%
here now let me grab this cube function
 

00:06:52.319 --> 00:06:54.409 align:start position:0%
here now let me grab this cube function
and<00:06:52.499><c> just</c><00:06:52.799><c> pass</c><00:06:52.979><c> it</c><00:06:53.189><c> in</c><00:06:53.309><c> to</c><00:06:53.609><c> our</c><00:06:53.729><c> map</c><00:06:53.939><c> function</c>

00:06:54.409 --> 00:06:54.419 align:start position:0%
and just pass it in to our map function
 

00:06:54.419 --> 00:06:56.769 align:start position:0%
and just pass it in to our map function
and<00:06:54.599><c> I'll</c><00:06:54.689><c> do</c><00:06:54.809><c> the</c><00:06:54.929><c> same</c><00:06:54.959><c> thing</c><00:06:55.409><c> over</c><00:06:55.889><c> here</c><00:06:56.159><c> in</c>

00:06:56.769 --> 00:06:56.779 align:start position:0%
and I'll do the same thing over here in
 

00:06:56.779 --> 00:06:59.199 align:start position:0%
and I'll do the same thing over here in
JavaScript<00:06:57.779><c> so</c><00:06:57.929><c> let</c><00:06:58.049><c> me</c><00:06:58.169><c> clear</c><00:06:58.409><c> that</c><00:06:58.439><c> out</c><00:06:58.769><c> and</c>

00:06:59.199 --> 00:06:59.209 align:start position:0%
JavaScript so let me clear that out and
 

00:06:59.209 --> 00:07:02.689 align:start position:0%
JavaScript so let me clear that out and
rerun<00:07:00.209><c> that</c><00:07:00.449><c> and</c><00:07:00.929><c> in</c><00:07:01.769><c> my</c><00:07:01.859><c> Python</c><00:07:02.249><c> example</c><00:07:02.369><c> I'm</c>

00:07:02.689 --> 00:07:02.699 align:start position:0%
rerun that and in my Python example I'm
 

00:07:02.699 --> 00:07:04.519 align:start position:0%
rerun that and in my Python example I'm
going<00:07:02.789><c> to</c><00:07:02.849><c> have</c><00:07:02.969><c> to</c><00:07:03.149><c> actually</c><00:07:04.019><c> cut</c><00:07:04.229><c> this</c><00:07:04.349><c> out</c>

00:07:04.519 --> 00:07:04.529 align:start position:0%
going to have to actually cut this out
 

00:07:04.529 --> 00:07:06.769 align:start position:0%
going to have to actually cut this out
and<00:07:04.799><c> move</c><00:07:05.159><c> it</c><00:07:05.279><c> above</c><00:07:05.549><c> here</c><00:07:06.269><c> by</c><00:07:06.419><c> the</c><00:07:06.479><c> square</c>

00:07:06.769 --> 00:07:06.779 align:start position:0%
and move it above here by the square
 

00:07:06.779 --> 00:07:08.899 align:start position:0%
and move it above here by the square
function<00:07:07.169><c> so</c><00:07:07.739><c> let</c><00:07:08.009><c> me</c><00:07:08.129><c> save</c><00:07:08.339><c> that</c><00:07:08.369><c> and</c><00:07:08.639><c> rerun</c>

00:07:08.899 --> 00:07:08.909 align:start position:0%
function so let me save that and rerun
 

00:07:08.909 --> 00:07:10.579 align:start position:0%
function so let me save that and rerun
it<00:07:09.029><c> so</c><00:07:09.539><c> you</c><00:07:09.629><c> can</c><00:07:09.779><c> see</c><00:07:09.899><c> all</c><00:07:10.139><c> that</c><00:07:10.289><c> we</c><00:07:10.409><c> did</c>

00:07:10.579 --> 00:07:10.589 align:start position:0%
it so you can see all that we did
 

00:07:10.589 --> 00:07:12.859 align:start position:0%
it so you can see all that we did
differently<00:07:10.979><c> was</c><00:07:11.219><c> pass</c><00:07:11.429><c> in</c><00:07:11.729><c> this</c><00:07:12.419><c> new</c>

00:07:12.859 --> 00:07:12.869 align:start position:0%
differently was pass in this new
 

00:07:12.869 --> 00:07:15.499 align:start position:0%
differently was pass in this new
function<00:07:13.409><c> as</c><00:07:13.589><c> an</c><00:07:13.949><c> argument</c><00:07:14.129><c> to</c><00:07:14.999><c> our</c><00:07:15.239><c> map</c>

00:07:15.499 --> 00:07:15.509 align:start position:0%
function as an argument to our map
 

00:07:15.509 --> 00:07:18.229 align:start position:0%
function as an argument to our map
function<00:07:16.049><c> and</c><00:07:16.229><c> then</c><00:07:16.709><c> it</c><00:07:16.919><c> used</c><00:07:17.339><c> that</c><00:07:17.699><c> function</c>

00:07:18.229 --> 00:07:18.239 align:start position:0%
function and then it used that function
 

00:07:18.239 --> 00:07:21.409 align:start position:0%
function and then it used that function
within<00:07:18.449><c> here</c><00:07:18.899><c> to</c><00:07:19.139><c> execute</c><00:07:19.739><c> on</c><00:07:20.549><c> each</c><00:07:20.849><c> of</c><00:07:21.149><c> these</c>

00:07:21.409 --> 00:07:21.419 align:start position:0%
within here to execute on each of these
 

00:07:21.419 --> 00:07:23.959 align:start position:0%
within here to execute on each of these
values<00:07:22.049><c> instead</c><00:07:22.799><c> of</c><00:07:23.159><c> the</c><00:07:23.249><c> square</c><00:07:23.399><c> function</c><00:07:23.669><c> so</c>

00:07:23.959 --> 00:07:23.969 align:start position:0%
values instead of the square function so
 

00:07:23.969 --> 00:07:25.609 align:start position:0%
values instead of the square function so
it's<00:07:24.089><c> it's</c><00:07:24.329><c> useful</c><00:07:24.869><c> to</c><00:07:24.899><c> be</c><00:07:25.019><c> able</c><00:07:25.229><c> to</c><00:07:25.379><c> pass</c>

00:07:25.609 --> 00:07:25.619 align:start position:0%
it's it's useful to be able to pass
 

00:07:25.619 --> 00:07:28.309 align:start position:0%
it's it's useful to be able to pass
around<00:07:25.969><c> functions</c><00:07:26.969><c> like</c><00:07:27.089><c> this</c><00:07:27.329><c> okay</c><00:07:28.259><c> so</c>

00:07:28.309 --> 00:07:28.319 align:start position:0%
around functions like this okay so
 

00:07:28.319 --> 00:07:30.979 align:start position:0%
around functions like this okay so
lastly<00:07:29.129><c> let's</c><00:07:29.579><c> see</c><00:07:29.729><c> what</c><00:07:29.879><c> it</c><00:07:29.969><c> looks</c><00:07:30.149><c> like</c><00:07:30.360><c> to</c>

00:07:30.979 --> 00:07:30.989 align:start position:0%
lastly let's see what it looks like to
 

00:07:30.989 --> 00:07:33.979 align:start position:0%
lastly let's see what it looks like to
return<00:07:31.709><c> a</c><00:07:32.009><c> function</c><00:07:32.339><c> from</c><00:07:33.209><c> another</c><00:07:33.749><c> function</c>

00:07:33.979 --> 00:07:33.989 align:start position:0%
return a function from another function
 

00:07:33.989 --> 00:07:37.159 align:start position:0%
return a function from another function
so<00:07:34.679><c> that</c><00:07:34.709><c> is</c><00:07:35.159><c> one</c><00:07:35.519><c> of</c><00:07:35.789><c> the</c><00:07:35.999><c> aspects</c><00:07:36.569><c> of</c><00:07:36.839><c> what</c><00:07:37.139><c> it</c>

00:07:37.159 --> 00:07:37.169 align:start position:0%
so that is one of the aspects of what it
 

00:07:37.169 --> 00:07:39.229 align:start position:0%
so that is one of the aspects of what it
means<00:07:37.349><c> to</c><00:07:37.499><c> be</c><00:07:37.649><c> a</c><00:07:37.679><c> first-class</c><00:07:38.189><c> function</c><00:07:38.759><c> now</c>

00:07:39.229 --> 00:07:39.239 align:start position:0%
means to be a first-class function now
 

00:07:39.239 --> 00:07:41.029 align:start position:0%
means to be a first-class function now
this<00:07:39.659><c> seems</c><00:07:39.899><c> to</c><00:07:40.049><c> be</c><00:07:40.079><c> what</c><00:07:40.349><c> trips</c><00:07:40.619><c> people</c><00:07:40.829><c> up</c>

00:07:41.029 --> 00:07:41.039 align:start position:0%
this seems to be what trips people up
 

00:07:41.039 --> 00:07:42.739 align:start position:0%
this seems to be what trips people up
the<00:07:41.189><c> most</c><00:07:41.399><c> and</c><00:07:41.669><c> I</c><00:07:42.029><c> have</c><00:07:42.119><c> to</c><00:07:42.269><c> admit</c><00:07:42.329><c> I</c><00:07:42.509><c> get</c>

00:07:42.739 --> 00:07:42.749 align:start position:0%
the most and I have to admit I get
 

00:07:42.749 --> 00:07:44.329 align:start position:0%
the most and I have to admit I get
tripped<00:07:42.989><c> up</c><00:07:43.109><c> on</c><00:07:43.289><c> this</c><00:07:43.469><c> all</c><00:07:43.709><c> the</c><00:07:43.739><c> time</c><00:07:44.039><c> too</c>

00:07:44.329 --> 00:07:44.339 align:start position:0%
tripped up on this all the time too
 

00:07:44.339 --> 00:07:46.309 align:start position:0%
tripped up on this all the time too
because<00:07:44.759><c> it</c><00:07:44.939><c> can</c><00:07:45.059><c> get</c><00:07:45.209><c> complicated</c><00:07:45.629><c> to</c><00:07:46.019><c> keep</c>

00:07:46.309 --> 00:07:46.319 align:start position:0%
because it can get complicated to keep
 

00:07:46.319 --> 00:07:48.289 align:start position:0%
because it can get complicated to keep
track<00:07:46.559><c> of</c><00:07:46.589><c> everything</c><00:07:46.949><c> and</c><00:07:47.249><c> sometimes</c><00:07:48.029><c> it</c><00:07:48.179><c> can</c>

00:07:48.289 --> 00:07:48.299 align:start position:0%
track of everything and sometimes it can
 

00:07:48.299 --> 00:07:50.509 align:start position:0%
track of everything and sometimes it can
be<00:07:48.329><c> hard</c><00:07:48.569><c> to</c><00:07:48.809><c> visualize</c><00:07:48.959><c> exactly</c><00:07:49.889><c> what's</c>

00:07:50.509 --> 00:07:50.519 align:start position:0%
be hard to visualize exactly what's
 

00:07:50.519 --> 00:07:52.459 align:start position:0%
be hard to visualize exactly what's
going<00:07:50.759><c> on</c><00:07:50.999><c> all</c><00:07:51.179><c> at</c><00:07:51.299><c> once</c><00:07:51.509><c> but</c><00:07:51.749><c> let's</c><00:07:52.259><c> take</c><00:07:52.439><c> a</c>

00:07:52.459 --> 00:07:52.469 align:start position:0%
going on all at once but let's take a
 

00:07:52.469 --> 00:07:54.939 align:start position:0%
going on all at once but let's take a
look<00:07:52.709><c> at</c><00:07:52.829><c> some</c><00:07:53.069><c> simple</c><00:07:53.429><c> examples</c><00:07:53.519><c> and</c><00:07:54.209><c> see</c><00:07:54.539><c> if</c>

00:07:54.939 --> 00:07:54.949 align:start position:0%
look at some simple examples and see if
 

00:07:54.949 --> 00:07:57.499 align:start position:0%
look at some simple examples and see if
we<00:07:55.949><c> can</c><00:07:56.099><c> see</c><00:07:56.309><c> what</c><00:07:56.489><c> this</c><00:07:56.639><c> looks</c><00:07:56.939><c> like</c><00:07:57.029><c> so</c><00:07:57.360><c> let</c>

00:07:57.499 --> 00:07:57.509 align:start position:0%
we can see what this looks like so let
 

00:07:57.509 --> 00:07:59.389 align:start position:0%
we can see what this looks like so let
me<00:07:57.659><c> go</c><00:07:58.139><c> ahead</c><00:07:58.169><c> and</c><00:07:58.439><c> just</c><00:07:58.529><c> remove</c><00:07:58.649><c> all</c><00:07:59.099><c> the</c><00:07:59.219><c> code</c>

00:07:59.389 --> 00:07:59.399 align:start position:0%
me go ahead and just remove all the code
 

00:07:59.399 --> 00:08:02.359 align:start position:0%
me go ahead and just remove all the code
that<00:07:59.639><c> I</c><00:07:59.669><c> had</c><00:07:59.969><c> and</c><00:08:00.319><c> uncomment</c><00:08:01.319><c> out</c><00:08:01.589><c> these</c><00:08:02.159><c> other</c>

00:08:02.359 --> 00:08:02.369 align:start position:0%
that I had and uncomment out these other
 

00:08:02.369 --> 00:08:04.309 align:start position:0%
that I had and uncomment out these other
examples<00:08:02.519><c> that</c><00:08:02.969><c> I</c><00:08:03.029><c> have</c><00:08:03.089><c> down</c><00:08:03.419><c> here</c><00:08:03.689><c> okay</c><00:08:04.259><c> so</c>

00:08:04.309 --> 00:08:04.319 align:start position:0%
examples that I have down here okay so
 

00:08:04.319 --> 00:08:07.159 align:start position:0%
examples that I have down here okay so
first<00:08:04.679><c> let's</c><00:08:05.159><c> take</c><00:08:05.309><c> a</c><00:08:05.369><c> look</c><00:08:05.639><c> at</c><00:08:05.849><c> this</c><00:08:06.179><c> really</c>

00:08:07.159 --> 00:08:07.169 align:start position:0%
first let's take a look at this really
 

00:08:07.169 --> 00:08:09.619 align:start position:0%
first let's take a look at this really
simple<00:08:07.829><c> logger</c><00:08:08.459><c> function</c><00:08:09.029><c> that</c><00:08:09.149><c> I</c><00:08:09.209><c> have</c><00:08:09.299><c> so</c>

00:08:09.619 --> 00:08:09.629 align:start position:0%
simple logger function that I have so
 

00:08:09.629 --> 00:08:11.149 align:start position:0%
simple logger function that I have so
I'm<00:08:09.689><c> going</c><00:08:09.839><c> to</c><00:08:09.869><c> uncomment</c><00:08:10.289><c> out</c><00:08:10.529><c> these</c><00:08:10.799><c> and</c>

00:08:11.149 --> 00:08:11.159 align:start position:0%
I'm going to uncomment out these and
 

00:08:11.159 --> 00:08:14.329 align:start position:0%
I'm going to uncomment out these and
save<00:08:12.089><c> these</c><00:08:12.389><c> okay</c><00:08:13.319><c> so</c><00:08:13.379><c> this</c><00:08:13.619><c> is</c><00:08:13.829><c> one</c><00:08:14.009><c> of</c><00:08:14.159><c> the</c>

00:08:14.329 --> 00:08:14.339 align:start position:0%
save these okay so this is one of the
 

00:08:14.339 --> 00:08:16.969 align:start position:0%
save these okay so this is one of the
simpler<00:08:15.239><c> examples</c><00:08:15.809><c> that</c><00:08:15.989><c> I</c><00:08:16.049><c> could</c><00:08:16.169><c> think</c><00:08:16.769><c> of</c>

00:08:16.969 --> 00:08:16.979 align:start position:0%
simpler examples that I could think of
 

00:08:16.979 --> 00:08:19.009 align:start position:0%
simpler examples that I could think of
to<00:08:17.039><c> start</c><00:08:17.399><c> out</c><00:08:17.579><c> with</c><00:08:17.729><c> so</c><00:08:18.299><c> we</c><00:08:18.689><c> have</c><00:08:18.839><c> this</c>

00:08:19.009 --> 00:08:19.019 align:start position:0%
to start out with so we have this
 

00:08:19.019 --> 00:08:21.829 align:start position:0%
to start out with so we have this
function<00:08:19.259><c> here</c><00:08:19.649><c> called</c><00:08:20.129><c> logger</c><00:08:20.729><c> and</c><00:08:21.029><c> this</c>

00:08:21.829 --> 00:08:21.839 align:start position:0%
function here called logger and this
 

00:08:21.839 --> 00:08:23.959 align:start position:0%
function here called logger and this
logger<00:08:22.139><c> function</c><00:08:22.709><c> takes</c><00:08:22.949><c> in</c><00:08:23.099><c> an</c><00:08:23.279><c> argument</c><00:08:23.819><c> a</c>

00:08:23.959 --> 00:08:23.969 align:start position:0%
logger function takes in an argument a
 

00:08:23.969 --> 00:08:26.509 align:start position:0%
logger function takes in an argument a
message<00:08:24.749><c> argument</c><00:08:25.199><c> and</c><00:08:25.349><c> then</c><00:08:25.860><c> within</c><00:08:26.099><c> this</c>

00:08:26.509 --> 00:08:26.519 align:start position:0%
message argument and then within this
 

00:08:26.519 --> 00:08:28.999 align:start position:0%
message argument and then within this
function<00:08:26.789><c> we</c><00:08:27.509><c> have</c><00:08:27.629><c> another</c><00:08:28.019><c> function</c><00:08:28.589><c> called</c>

00:08:28.999 --> 00:08:29.009 align:start position:0%
function we have another function called
 

00:08:29.009 --> 00:08:31.429 align:start position:0%
function we have another function called
log<00:08:29.519><c> message</c><00:08:30.089><c> and</c><00:08:30.299><c> this</c><00:08:30.689><c> function</c><00:08:31.199><c> doesn't</c>

00:08:31.429 --> 00:08:31.439 align:start position:0%
log message and this function doesn't
 

00:08:31.439 --> 00:08:33.980 align:start position:0%
log message and this function doesn't
take<00:08:31.739><c> in</c><00:08:31.949><c> any</c><00:08:32.219><c> arguments</c><00:08:32.849><c> and</c><00:08:33.000><c> all</c><00:08:33.629><c> it</c><00:08:33.779><c> does</c>

00:08:33.980 --> 00:08:33.990 align:start position:0%
take in any arguments and all it does
 

00:08:33.990 --> 00:08:35.689 align:start position:0%
take in any arguments and all it does
when<00:08:34.289><c> you</c><00:08:34.379><c> execute</c><00:08:34.709><c> this</c><00:08:35.039><c> log</c><00:08:35.279><c> message</c>

00:08:35.689 --> 00:08:35.699 align:start position:0%
when you execute this log message
 

00:08:35.699 --> 00:08:38.749 align:start position:0%
when you execute this log message
function<00:08:35.969><c> is</c><00:08:36.300><c> that</c><00:08:36.930><c> it</c><00:08:37.050><c> prints</c><00:08:37.349><c> out</c><00:08:37.559><c> this</c><00:08:38.250><c> log</c>

00:08:38.749 --> 00:08:38.759 align:start position:0%
function is that it prints out this log
 

00:08:38.759 --> 00:08:41.119 align:start position:0%
function is that it prints out this log
statement<00:08:39.419><c> with</c><00:08:39.899><c> the</c><00:08:40.169><c> message</c><00:08:40.620><c> that</c><00:08:40.949><c> we</c>

00:08:41.119 --> 00:08:41.129 align:start position:0%
statement with the message that we
 

00:08:41.129 --> 00:08:43.639 align:start position:0%
statement with the message that we
passed<00:08:41.399><c> in</c><00:08:41.669><c> to</c><00:08:42.089><c> our</c><00:08:42.209><c> logger</c><00:08:42.509><c> function</c><00:08:43.050><c> and</c><00:08:43.229><c> now</c>

00:08:43.639 --> 00:08:43.649 align:start position:0%
passed in to our logger function and now
 

00:08:43.649 --> 00:08:45.889 align:start position:0%
passed in to our logger function and now
down<00:08:43.889><c> here</c><00:08:43.949><c> at</c><00:08:44.250><c> the</c><00:08:44.339><c> bottom</c><00:08:44.699><c> we</c><00:08:45.209><c> are</c><00:08:45.240><c> returning</c>

00:08:45.889 --> 00:08:45.899 align:start position:0%
down here at the bottom we are returning
 

00:08:45.899 --> 00:08:49.009 align:start position:0%
down here at the bottom we are returning
this<00:08:46.559><c> log</c><00:08:47.069><c> message</c><00:08:47.639><c> function</c><00:08:47.910><c> that</c><00:08:48.600><c> is</c><00:08:48.809><c> within</c>

00:08:49.009 --> 00:08:49.019 align:start position:0%
this log message function that is within
 

00:08:49.019 --> 00:08:51.439 align:start position:0%
this log message function that is within
our<00:08:49.679><c> logger</c><00:08:50.160><c> function</c><00:08:50.670><c> now</c><00:08:51.149><c> I</c><00:08:51.179><c> know</c><00:08:51.329><c> that</c>

00:08:51.439 --> 00:08:51.449 align:start position:0%
our logger function now I know that
 

00:08:51.449 --> 00:08:53.179 align:start position:0%
our logger function now I know that
might<00:08:51.660><c> sound</c><00:08:51.839><c> confusing</c><00:08:52.019><c> but</c><00:08:52.559><c> let's</c><00:08:53.040><c> go</c><00:08:53.160><c> ahead</c>

00:08:53.179 --> 00:08:53.189 align:start position:0%
might sound confusing but let's go ahead
 

00:08:53.189 --> 00:08:55.010 align:start position:0%
might sound confusing but let's go ahead
and<00:08:53.399><c> run</c><00:08:53.550><c> an</c><00:08:53.699><c> example</c><00:08:54.240><c> and</c><00:08:54.449><c> walk</c><00:08:54.629><c> through</c>

00:08:55.010 --> 00:08:55.020 align:start position:0%
and run an example and walk through
 

00:08:55.020 --> 00:08:56.930 align:start position:0%
and run an example and walk through
see<00:08:55.230><c> if</c><00:08:55.320><c> we</c><00:08:55.410><c> can</c><00:08:55.560><c> see</c><00:08:55.709><c> what's</c><00:08:55.890><c> going</c><00:08:56.070><c> on</c><00:08:56.279><c> okay</c>

00:08:56.930 --> 00:08:56.940 align:start position:0%
see if we can see what's going on okay
 

00:08:56.940 --> 00:08:59.389 align:start position:0%
see if we can see what's going on okay
so<00:08:57.000><c> let</c><00:08:57.570><c> me</c><00:08:57.660><c> go</c><00:08:57.810><c> ahead</c><00:08:57.899><c> and</c><00:08:58.230><c> execute</c><00:08:58.649><c> this</c><00:08:59.100><c> in</c>

00:08:59.389 --> 00:08:59.399 align:start position:0%
so let me go ahead and execute this in
 

00:08:59.399 --> 00:09:02.960 align:start position:0%
so let me go ahead and execute this in
both<00:08:59.640><c> Python</c><00:09:00.270><c> and</c><00:09:00.540><c> in</c><00:09:01.200><c> JavaScript</c><00:09:01.830><c> and</c><00:09:02.010><c> let's</c>

00:09:02.960 --> 00:09:02.970 align:start position:0%
both Python and in JavaScript and let's
 

00:09:02.970 --> 00:09:04.880 align:start position:0%
both Python and in JavaScript and let's
walk<00:09:03.209><c> through</c><00:09:03.240><c> exactly</c><00:09:03.990><c> what</c><00:09:04.380><c> just</c><00:09:04.560><c> happened</c>

00:09:04.880 --> 00:09:04.890 align:start position:0%
walk through exactly what just happened
 

00:09:04.890 --> 00:09:08.000 align:start position:0%
walk through exactly what just happened
so<00:09:05.490><c> what</c><00:09:05.610><c> we</c><00:09:05.760><c> did</c><00:09:05.910><c> is</c><00:09:06.120><c> we</c><00:09:06.149><c> set</c><00:09:06.480><c> this</c><00:09:06.990><c> log</c><00:09:07.620><c> hi</c>

00:09:08.000 --> 00:09:08.010 align:start position:0%
so what we did is we set this log hi
 

00:09:08.010 --> 00:09:12.079 align:start position:0%
so what we did is we set this log hi
variable<00:09:09.000><c> equal</c><00:09:09.839><c> to</c><00:09:10.050><c> our</c><00:09:10.459><c> logger</c><00:09:11.459><c> function</c>

00:09:12.079 --> 00:09:12.089 align:start position:0%
variable equal to our logger function
 

00:09:12.089 --> 00:09:15.440 align:start position:0%
variable equal to our logger function
and<00:09:12.270><c> we</c><00:09:12.720><c> passed</c><00:09:12.990><c> in</c><00:09:13.350><c> a</c><00:09:13.560><c> message</c><00:09:14.160><c> of</c><00:09:14.399><c> hi</c><00:09:15.089><c> and</c>

00:09:15.440 --> 00:09:15.450 align:start position:0%
and we passed in a message of hi and
 

00:09:15.450 --> 00:09:18.740 align:start position:0%
and we passed in a message of hi and
then<00:09:15.959><c> so</c><00:09:16.380><c> this</c><00:09:16.589><c> came</c><00:09:16.830><c> in</c><00:09:16.860><c> and</c><00:09:17.339><c> it</c><00:09:18.149><c> saw</c><00:09:18.390><c> that</c><00:09:18.600><c> we</c>

00:09:18.740 --> 00:09:18.750 align:start position:0%
then so this came in and it saw that we
 

00:09:18.750 --> 00:09:21.199 align:start position:0%
then so this came in and it saw that we
had<00:09:18.959><c> a</c><00:09:19.200><c> function</c><00:09:19.680><c> created</c><00:09:20.070><c> here</c><00:09:20.279><c> and</c><00:09:20.459><c> then</c><00:09:21.000><c> we</c>

00:09:21.199 --> 00:09:21.209 align:start position:0%
had a function created here and then we
 

00:09:21.209 --> 00:09:23.960 align:start position:0%
had a function created here and then we
returned<00:09:21.750><c> that</c><00:09:22.350><c> function</c><00:09:22.920><c> and</c><00:09:23.070><c> again</c><00:09:23.310><c> no</c>

00:09:23.960 --> 00:09:23.970 align:start position:0%
returned that function and again no
 

00:09:23.970 --> 00:09:25.940 align:start position:0%
returned that function and again no
parenthesis<00:09:24.600><c> so</c><00:09:24.899><c> that</c><00:09:25.080><c> function</c><00:09:25.260><c> did</c><00:09:25.740><c> not</c>

00:09:25.940 --> 00:09:25.950 align:start position:0%
parenthesis so that function did not
 

00:09:25.950 --> 00:09:29.389 align:start position:0%
parenthesis so that function did not
execute<00:09:26.310><c> at</c><00:09:26.550><c> that</c><00:09:26.670><c> time</c><00:09:26.910><c> so</c><00:09:27.779><c> now</c><00:09:28.020><c> our</c><00:09:28.350><c> log</c><00:09:28.830><c> hi</c>

00:09:29.389 --> 00:09:29.399 align:start position:0%
execute at that time so now our log hi
 

00:09:29.399 --> 00:09:33.290 align:start position:0%
execute at that time so now our log hi
variable<00:09:30.390><c> is</c><00:09:30.570><c> equal</c><00:09:31.230><c> to</c><00:09:31.890><c> this</c><00:09:32.700><c> function</c>

00:09:33.290 --> 00:09:33.300 align:start position:0%
variable is equal to this function
 

00:09:33.300 --> 00:09:36.710 align:start position:0%
variable is equal to this function
that's<00:09:33.779><c> what</c><00:09:34.050><c> got</c><00:09:34.230><c> returned</c><00:09:34.730><c> from</c><00:09:35.730><c> this</c><00:09:36.000><c> so</c>

00:09:36.710 --> 00:09:36.720 align:start position:0%
that's what got returned from this so
 

00:09:36.720 --> 00:09:40.340 align:start position:0%
that's what got returned from this so
now<00:09:36.930><c> we</c><00:09:37.470><c> can</c><00:09:37.680><c> run</c><00:09:38.130><c> this</c><00:09:38.610><c> log</c><00:09:39.060><c> hi</c><00:09:39.360><c> variable</c><00:09:39.899><c> just</c>

00:09:40.340 --> 00:09:40.350 align:start position:0%
now we can run this log hi variable just
 

00:09:40.350 --> 00:09:41.660 align:start position:0%
now we can run this log hi variable just
like<00:09:40.410><c> it's</c><00:09:40.709><c> a</c><00:09:40.800><c> function</c><00:09:41.160><c> because</c><00:09:41.399><c> it</c><00:09:41.520><c> is</c><00:09:41.640><c> a</c>

00:09:41.660 --> 00:09:41.670 align:start position:0%
like it's a function because it is a
 

00:09:41.670 --> 00:09:43.760 align:start position:0%
like it's a function because it is a
function<00:09:41.940><c> so</c><00:09:42.690><c> now</c><00:09:42.870><c> we</c><00:09:42.930><c> can</c><00:09:43.230><c> treat</c><00:09:43.440><c> this</c>

00:09:43.760 --> 00:09:43.770 align:start position:0%
function so now we can treat this
 

00:09:43.770 --> 00:09:47.150 align:start position:0%
function so now we can treat this
variable<00:09:44.399><c> just</c><00:09:45.209><c> like</c><00:09:45.330><c> this</c><00:09:46.320><c> function</c><00:09:46.860><c> here</c>

00:09:47.150 --> 00:09:47.160 align:start position:0%
variable just like this function here
 

00:09:47.160 --> 00:09:49.730 align:start position:0%
variable just like this function here
and<00:09:47.310><c> it</c><00:09:47.580><c> doesn't</c><00:09:47.850><c> take</c><00:09:48.180><c> in</c><00:09:48.450><c> any</c><00:09:48.720><c> arguments</c><00:09:49.320><c> so</c>

00:09:49.730 --> 00:09:49.740 align:start position:0%
and it doesn't take in any arguments so
 

00:09:49.740 --> 00:09:51.680 align:start position:0%
and it doesn't take in any arguments so
if<00:09:49.860><c> we</c><00:09:50.010><c> put</c><00:09:50.190><c> in</c><00:09:50.310><c> these</c><00:09:50.459><c> parentheses</c><00:09:50.640><c> here</c><00:09:51.149><c> and</c>

00:09:51.680 --> 00:09:51.690 align:start position:0%
if we put in these parentheses here and
 

00:09:51.690 --> 00:09:53.420 align:start position:0%
if we put in these parentheses here and
what<00:09:51.839><c> it's</c><00:09:51.959><c> going</c><00:09:52.020><c> to</c><00:09:52.170><c> do</c><00:09:52.350><c> is</c><00:09:52.620><c> it's</c><00:09:53.130><c> going</c><00:09:53.190><c> to</c>

00:09:53.420 --> 00:09:53.430 align:start position:0%
what it's going to do is it's going to
 

00:09:53.430 --> 00:09:56.510 align:start position:0%
what it's going to do is it's going to
execute<00:09:54.360><c> this</c><00:09:54.779><c> log</c><00:09:55.170><c> message</c><00:09:55.709><c> and</c><00:09:55.920><c> then</c><00:09:56.430><c> it</c>

00:09:56.510 --> 00:09:56.520 align:start position:0%
execute this log message and then it
 

00:09:56.520 --> 00:09:58.820 align:start position:0%
execute this log message and then it
came<00:09:56.670><c> in</c><00:09:56.850><c> here</c><00:09:57.029><c> and</c><00:09:57.209><c> printed</c><00:09:57.690><c> out</c><00:09:57.810><c> the</c><00:09:58.560><c> log</c>

00:09:58.820 --> 00:09:58.830 align:start position:0%
came in here and printed out the log
 

00:09:58.830 --> 00:10:01.670 align:start position:0%
came in here and printed out the log
with<00:09:59.399><c> our</c><00:09:59.610><c> message</c><00:10:00.060><c> so</c><00:10:00.720><c> one</c><00:10:00.899><c> thing</c><00:10:01.079><c> important</c>

00:10:01.670 --> 00:10:01.680 align:start position:0%
with our message so one thing important
 

00:10:01.680 --> 00:10:04.460 align:start position:0%
with our message so one thing important
to<00:10:01.709><c> point</c><00:10:02.040><c> out</c><00:10:02.190><c> here</c><00:10:02.490><c> is</c><00:10:02.640><c> that</c><00:10:03.029><c> from</c><00:10:03.690><c> this</c><00:10:04.110><c> step</c>

00:10:04.460 --> 00:10:04.470 align:start position:0%
to point out here is that from this step
 

00:10:04.470 --> 00:10:06.920 align:start position:0%
to point out here is that from this step
two<00:10:05.100><c> when</c><00:10:05.310><c> we</c><00:10:05.339><c> executed</c><00:10:06.209><c> the</c><00:10:06.360><c> function</c><00:10:06.779><c> at</c>

00:10:06.920 --> 00:10:06.930 align:start position:0%
two when we executed the function at
 

00:10:06.930 --> 00:10:09.889 align:start position:0%
two when we executed the function at
this<00:10:07.260><c> step</c><00:10:07.529><c> that</c><00:10:07.800><c> it</c><00:10:08.399><c> remembered</c><00:10:09.060><c> our</c><00:10:09.300><c> initial</c>

00:10:09.889 --> 00:10:09.899 align:start position:0%
this step that it remembered our initial
 

00:10:09.899 --> 00:10:12.370 align:start position:0%
this step that it remembered our initial
message<00:10:10.140><c> that</c><00:10:10.649><c> we</c><00:10:10.770><c> passed</c><00:10:11.070><c> in</c><00:10:11.399><c> to</c><00:10:12.000><c> this</c>

00:10:12.370 --> 00:10:12.380 align:start position:0%
message that we passed in to this
 

00:10:12.380 --> 00:10:15.319 align:start position:0%
message that we passed in to this
initial<00:10:13.380><c> logger</c><00:10:13.680><c> function</c><00:10:14.250><c> now</c><00:10:14.790><c> this</c><00:10:15.000><c> is</c><00:10:15.180><c> what</c>

00:10:15.319 --> 00:10:15.329 align:start position:0%
initial logger function now this is what
 

00:10:15.329 --> 00:10:18.500 align:start position:0%
initial logger function now this is what
we<00:10:15.450><c> call</c><00:10:15.660><c> a</c><00:10:15.870><c> closure</c><00:10:16.260><c> but</c><00:10:16.950><c> again</c><00:10:17.430><c> I'll</c><00:10:18.029><c> go</c><00:10:18.360><c> in</c>

00:10:18.500 --> 00:10:18.510 align:start position:0%
we call a closure but again I'll go in
 

00:10:18.510 --> 00:10:20.329 align:start position:0%
we call a closure but again I'll go in
more<00:10:18.810><c> in-depth</c><00:10:19.170><c> into</c><00:10:19.350><c> closures</c><00:10:19.829><c> in</c><00:10:20.010><c> a</c><00:10:20.070><c> future</c>

00:10:20.329 --> 00:10:20.339 align:start position:0%
more in-depth into closures in a future
 

00:10:20.339 --> 00:10:23.690 align:start position:0%
more in-depth into closures in a future
video<00:10:20.640><c> but</c><00:10:21.500><c> this</c><00:10:22.500><c> just</c><00:10:22.770><c> kind</c><00:10:23.220><c> of</c><00:10:23.339><c> knocks</c><00:10:23.550><c> the</c>

00:10:23.690 --> 00:10:23.700 align:start position:0%
video but this just kind of knocks the
 

00:10:23.700 --> 00:10:25.310 align:start position:0%
video but this just kind of knocks the
point<00:10:23.940><c> home</c><00:10:24.089><c> that</c><00:10:24.170><c> understanding</c><00:10:25.170><c> these</c>

00:10:25.310 --> 00:10:25.320 align:start position:0%
point home that understanding these
 

00:10:25.320 --> 00:10:27.410 align:start position:0%
point home that understanding these
first-class<00:10:26.250><c> functions</c><00:10:26.610><c> will</c><00:10:27.089><c> help</c><00:10:27.270><c> you</c>

00:10:27.410 --> 00:10:27.420 align:start position:0%
first-class functions will help you
 

00:10:27.420 --> 00:10:29.870 align:start position:0%
first-class functions will help you
understand<00:10:28.050><c> these</c><00:10:28.529><c> more</c><00:10:28.829><c> complex</c><00:10:29.310><c> terms</c><00:10:29.670><c> like</c>

00:10:29.870 --> 00:10:29.880 align:start position:0%
understand these more complex terms like
 

00:10:29.880 --> 00:10:32.420 align:start position:0%
understand these more complex terms like
closures<00:10:30.390><c> and</c><00:10:30.690><c> higher-order</c><00:10:30.930><c> functions</c><00:10:31.620><c> okay</c>

00:10:32.420 --> 00:10:32.430 align:start position:0%
closures and higher-order functions okay
 

00:10:32.430 --> 00:10:36.110 align:start position:0%
closures and higher-order functions okay
so<00:10:32.490><c> why</c><00:10:32.910><c> would</c><00:10:33.829><c> returning</c><00:10:34.829><c> a</c><00:10:34.980><c> function</c><00:10:35.850><c> from</c>

00:10:36.110 --> 00:10:36.120 align:start position:0%
so why would returning a function from
 

00:10:36.120 --> 00:10:38.680 align:start position:0%
so why would returning a function from
another<00:10:36.480><c> function</c><00:10:36.720><c> like</c><00:10:37.140><c> this</c><00:10:37.440><c> be</c><00:10:38.070><c> useful</c>

00:10:38.680 --> 00:10:38.690 align:start position:0%
another function like this be useful
 

00:10:38.690 --> 00:10:41.510 align:start position:0%
another function like this be useful
well<00:10:39.690><c> I</c><00:10:39.750><c> tried</c><00:10:40.050><c> to</c><00:10:40.079><c> some</c><00:10:40.620><c> of</c><00:10:40.740><c> the</c><00:10:40.829><c> practical</c>

00:10:41.510 --> 00:10:41.520 align:start position:0%
well I tried to some of the practical
 

00:10:41.520 --> 00:10:43.519 align:start position:0%
well I tried to some of the practical
examples<00:10:42.180><c> of</c><00:10:42.270><c> this</c><00:10:42.420><c> can</c><00:10:43.079><c> get</c><00:10:43.260><c> really</c>

00:10:43.519 --> 00:10:43.529 align:start position:0%
examples of this can get really
 

00:10:43.529 --> 00:10:45.290 align:start position:0%
examples of this can get really
complicated<00:10:43.800><c> really</c><00:10:44.250><c> fast</c><00:10:44.700><c> so</c><00:10:44.910><c> I</c><00:10:44.940><c> tried</c><00:10:45.270><c> to</c>

00:10:45.290 --> 00:10:45.300 align:start position:0%
complicated really fast so I tried to
 

00:10:45.300 --> 00:10:48.260 align:start position:0%
complicated really fast so I tried to
make<00:10:45.570><c> a</c><00:10:45.779><c> semi</c><00:10:46.500><c> practical</c><00:10:47.130><c> example</c><00:10:47.640><c> that</c><00:10:48.120><c> we</c>

00:10:48.260 --> 00:10:48.270 align:start position:0%
make a semi practical example that we
 

00:10:48.270 --> 00:10:50.150 align:start position:0%
make a semi practical example that we
could<00:10:48.420><c> look</c><00:10:48.570><c> at</c><00:10:48.779><c> and</c><00:10:48.990><c> still</c><00:10:49.380><c> understand</c>

00:10:50.150 --> 00:10:50.160 align:start position:0%
could look at and still understand
 

00:10:50.160 --> 00:10:51.769 align:start position:0%
could look at and still understand
pretty<00:10:50.370><c> well</c><00:10:50.550><c> so</c><00:10:51.060><c> I'm</c><00:10:51.120><c> just</c><00:10:51.270><c> going</c><00:10:51.420><c> to</c><00:10:51.450><c> remove</c>

00:10:51.769 --> 00:10:51.779 align:start position:0%
pretty well so I'm just going to remove
 

00:10:51.779 --> 00:10:53.750 align:start position:0%
pretty well so I'm just going to remove
this<00:10:52.230><c> logger</c><00:10:52.620><c> function</c><00:10:53.130><c> that</c><00:10:53.220><c> I</c><00:10:53.279><c> have</c><00:10:53.490><c> here</c>

00:10:53.750 --> 00:10:53.760 align:start position:0%
this logger function that I have here
 

00:10:53.760 --> 00:10:56.360 align:start position:0%
this logger function that I have here
and<00:10:54.050><c> uncomment</c><00:10:55.050><c> out</c><00:10:55.380><c> the</c><00:10:55.620><c> rest</c><00:10:55.890><c> of</c><00:10:56.070><c> the</c><00:10:56.130><c> code</c>

00:10:56.360 --> 00:10:56.370 align:start position:0%
and uncomment out the rest of the code
 

00:10:56.370 --> 00:10:59.170 align:start position:0%
and uncomment out the rest of the code
that<00:10:56.820><c> we</c><00:10:56.970><c> have</c><00:10:57.240><c> here</c><00:10:58.110><c> so</c><00:10:58.350><c> let</c><00:10:58.470><c> me</c><00:10:58.500><c> do</c><00:10:58.680><c> this</c><00:10:58.829><c> in</c>

00:10:59.170 --> 00:10:59.180 align:start position:0%
that we have here so let me do this in
 

00:10:59.180 --> 00:11:02.600 align:start position:0%
that we have here so let me do this in
Python<00:11:00.180><c> also</c><00:11:00.450><c> and</c><00:11:01.079><c> I'll</c><00:11:01.860><c> just</c><00:11:02.010><c> go</c><00:11:02.160><c> ahead</c><00:11:02.250><c> and</c>

00:11:02.600 --> 00:11:02.610 align:start position:0%
Python also and I'll just go ahead and
 

00:11:02.610 --> 00:11:04.370 align:start position:0%
Python also and I'll just go ahead and
run<00:11:02.850><c> that</c><00:11:03.089><c> and</c><00:11:03.390><c> over</c><00:11:03.900><c> here</c><00:11:04.079><c> I'm</c><00:11:04.170><c> going</c><00:11:04.290><c> to</c>

00:11:04.370 --> 00:11:04.380 align:start position:0%
run that and over here I'm going to
 

00:11:04.380 --> 00:11:07.189 align:start position:0%
run that and over here I'm going to
clear<00:11:04.680><c> out</c><00:11:05.070><c> the</c><00:11:05.670><c> console</c><00:11:06.180><c> and</c><00:11:06.420><c> run</c><00:11:06.779><c> that</c><00:11:06.990><c> code</c>

00:11:07.189 --> 00:11:07.199 align:start position:0%
clear out the console and run that code
 

00:11:07.199 --> 00:11:08.960 align:start position:0%
clear out the console and run that code
okay<00:11:07.949><c> so</c><00:11:08.010><c> let's</c><00:11:08.370><c> see</c><00:11:08.550><c> if</c><00:11:08.670><c> we</c>

00:11:08.960 --> 00:11:08.970 align:start position:0%
okay so let's see if we
 

00:11:08.970 --> 00:11:11.269 align:start position:0%
okay so let's see if we
and<00:11:09.060><c> understand</c><00:11:09.629><c> what's</c><00:11:09.810><c> going</c><00:11:10.050><c> on</c><00:11:10.139><c> here</c><00:11:10.199><c> so</c><00:11:10.949><c> I</c>

00:11:11.269 --> 00:11:11.279 align:start position:0%
and understand what's going on here so I
 

00:11:11.279 --> 00:11:13.999 align:start position:0%
and understand what's going on here so I
have<00:11:11.490><c> a</c><00:11:11.519><c> function</c><00:11:11.910><c> here</c><00:11:12.360><c> called</c><00:11:12.589><c> HTML</c><00:11:13.589><c> tag</c>

00:11:13.999 --> 00:11:14.009 align:start position:0%
have a function here called HTML tag
 

00:11:14.009 --> 00:11:17.329 align:start position:0%
have a function here called HTML tag
which<00:11:14.699><c> takes</c><00:11:15.000><c> in</c><00:11:15.300><c> an</c><00:11:15.480><c> argument</c><00:11:15.810><c> called</c><00:11:16.769><c> tag</c>

00:11:17.329 --> 00:11:17.339 align:start position:0%
which takes in an argument called tag
 

00:11:17.339 --> 00:11:20.420 align:start position:0%
which takes in an argument called tag
and<00:11:17.699><c> within</c><00:11:18.240><c> this</c><00:11:18.540><c> function</c><00:11:18.779><c> I</c><00:11:19.199><c> have</c><00:11:19.800><c> another</c>

00:11:20.420 --> 00:11:20.430 align:start position:0%
and within this function I have another
 

00:11:20.430 --> 00:11:23.389 align:start position:0%
and within this function I have another
function<00:11:20.939><c> called</c><00:11:21.300><c> rat</c><00:11:21.779><c> text</c><00:11:22.439><c> and</c><00:11:22.589><c> wrap</c><00:11:23.040><c> text</c>

00:11:23.389 --> 00:11:23.399 align:start position:0%
function called rat text and wrap text
 

00:11:23.399 --> 00:11:26.269 align:start position:0%
function called rat text and wrap text
takes<00:11:24.000><c> in</c><00:11:24.209><c> an</c><00:11:24.329><c> argument</c><00:11:24.480><c> called</c><00:11:25.350><c> message</c><00:11:26.069><c> and</c>

00:11:26.269 --> 00:11:26.279 align:start position:0%
takes in an argument called message and
 

00:11:26.279 --> 00:11:28.879 align:start position:0%
takes in an argument called message and
when<00:11:26.879><c> you</c><00:11:26.970><c> execute</c><00:11:27.360><c> this</c><00:11:27.720><c> wrap</c><00:11:27.990><c> text</c><00:11:28.350><c> function</c>

00:11:28.879 --> 00:11:28.889 align:start position:0%
when you execute this wrap text function
 

00:11:28.889 --> 00:11:33.290 align:start position:0%
when you execute this wrap text function
it<00:11:29.100><c> prints</c><00:11:30.029><c> out</c><00:11:30.560><c> this</c><00:11:31.560><c> it</c><00:11:31.889><c> prints</c><00:11:32.399><c> out</c><00:11:32.519><c> the</c><00:11:32.850><c> tag</c>

00:11:33.290 --> 00:11:33.300 align:start position:0%
it prints out this it prints out the tag
 

00:11:33.300 --> 00:11:35.840 align:start position:0%
it prints out this it prints out the tag
within<00:11:33.810><c> opening</c><00:11:34.500><c> brackets</c><00:11:34.920><c> here</c><00:11:35.129><c> and</c><00:11:35.370><c> then</c><00:11:35.730><c> it</c>

00:11:35.840 --> 00:11:35.850 align:start position:0%
within opening brackets here and then it
 

00:11:35.850 --> 00:11:37.490 align:start position:0%
within opening brackets here and then it
prints<00:11:36.120><c> out</c><00:11:36.180><c> the</c><00:11:36.389><c> message</c><00:11:36.810><c> and</c><00:11:36.990><c> then</c><00:11:37.350><c> it</c>

00:11:37.490 --> 00:11:37.500 align:start position:0%
prints out the message and then it
 

00:11:37.500 --> 00:11:39.499 align:start position:0%
prints out the message and then it
prints<00:11:37.740><c> out</c><00:11:37.800><c> the</c><00:11:37.980><c> tag</c><00:11:38.160><c> again</c><00:11:38.430><c> in</c><00:11:39.000><c> closing</c>

00:11:39.499 --> 00:11:39.509 align:start position:0%
prints out the tag again in closing
 

00:11:39.509 --> 00:11:41.210 align:start position:0%
prints out the tag again in closing
brackets<00:11:39.930><c> and</c><00:11:40.079><c> it</c><00:11:40.139><c> does</c><00:11:40.290><c> the</c><00:11:40.410><c> same</c><00:11:40.439><c> thing</c><00:11:40.920><c> here</c>

00:11:41.210 --> 00:11:41.220 align:start position:0%
brackets and it does the same thing here
 

00:11:41.220 --> 00:11:44.179 align:start position:0%
brackets and it does the same thing here
in<00:11:41.370><c> JavaScript</c><00:11:41.939><c> so</c><00:11:42.149><c> then</c><00:11:42.839><c> back</c><00:11:43.410><c> to</c><00:11:43.709><c> our</c><00:11:43.740><c> HTML</c>

00:11:44.179 --> 00:11:44.189 align:start position:0%
in JavaScript so then back to our HTML
 

00:11:44.189 --> 00:11:46.910 align:start position:0%
in JavaScript so then back to our HTML
tag<00:11:44.850><c> function</c><00:11:45.149><c> outside</c><00:11:45.600><c> of</c><00:11:46.319><c> the</c><00:11:46.470><c> wrap</c><00:11:46.649><c> text</c>

00:11:46.910 --> 00:11:46.920 align:start position:0%
tag function outside of the wrap text
 

00:11:46.920 --> 00:11:49.999 align:start position:0%
tag function outside of the wrap text
what<00:11:47.670><c> we're</c><00:11:47.819><c> doing</c><00:11:48.149><c> is</c><00:11:48.300><c> returning</c><00:11:49.019><c> this</c><00:11:49.680><c> wrap</c>

00:11:49.999 --> 00:11:50.009 align:start position:0%
what we're doing is returning this wrap
 

00:11:50.009 --> 00:11:52.730 align:start position:0%
what we're doing is returning this wrap
text<00:11:50.399><c> function</c><00:11:51.180><c> okay</c><00:11:51.779><c> so</c><00:11:51.810><c> now</c><00:11:52.110><c> let's</c><00:11:52.350><c> look</c><00:11:52.560><c> at</c>

00:11:52.730 --> 00:11:52.740 align:start position:0%
text function okay so now let's look at
 

00:11:52.740 --> 00:11:55.009 align:start position:0%
text function okay so now let's look at
our<00:11:52.980><c> examples</c><00:11:53.519><c> so</c><00:11:54.120><c> I</c><00:11:54.149><c> have</c><00:11:54.300><c> this</c><00:11:54.449><c> variable</c>

00:11:55.009 --> 00:11:55.019 align:start position:0%
our examples so I have this variable
 

00:11:55.019 --> 00:11:58.100 align:start position:0%
our examples so I have this variable
called<00:11:55.620><c> print</c><00:11:56.189><c> h1</c><00:11:56.939><c> and</c><00:11:57.209><c> I'm</c><00:11:57.629><c> setting</c><00:11:57.899><c> this</c>

00:11:58.100 --> 00:11:58.110 align:start position:0%
called print h1 and I'm setting this
 

00:11:58.110 --> 00:12:01.879 align:start position:0%
called print h1 and I'm setting this
equal<00:11:58.259><c> to</c><00:11:58.769><c> our</c><00:11:59.069><c> HTML</c><00:11:59.550><c> tag</c><00:12:00.269><c> function</c><00:12:01.230><c> and</c><00:12:01.410><c> I'm</c>

00:12:01.879 --> 00:12:01.889 align:start position:0%
equal to our HTML tag function and I'm
 

00:12:01.889 --> 00:12:06.319 align:start position:0%
equal to our HTML tag function and I'm
passing<00:12:02.430><c> in</c><00:12:02.639><c> a</c><00:12:02.879><c> an</c><00:12:03.629><c> a</c><00:12:04.050><c> string</c><00:12:04.589><c> of</c><00:12:04.829><c> h1</c><00:12:05.490><c> so</c><00:12:06.089><c> at</c>

00:12:06.319 --> 00:12:06.329 align:start position:0%
passing in a an a string of h1 so at
 

00:12:06.329 --> 00:12:08.569 align:start position:0%
passing in a an a string of h1 so at
this<00:12:06.480><c> point</c><00:12:06.750><c> whenever</c><00:12:07.170><c> I</c><00:12:07.259><c> do</c><00:12:07.319><c> that</c><00:12:07.649><c> actually</c>

00:12:08.569 --> 00:12:08.579 align:start position:0%
this point whenever I do that actually
 

00:12:08.579 --> 00:12:11.329 align:start position:0%
this point whenever I do that actually
to<00:12:09.269><c> kind</c><00:12:10.110><c> of</c><00:12:10.259><c> explain</c><00:12:10.860><c> this</c><00:12:11.009><c> a</c><00:12:11.069><c> little</c><00:12:11.189><c> bit</c>

00:12:11.329 --> 00:12:11.339 align:start position:0%
to kind of explain this a little bit
 

00:12:11.339 --> 00:12:13.549 align:start position:0%
to kind of explain this a little bit
better<00:12:11.490><c> I'm</c><00:12:12.060><c> going</c><00:12:12.209><c> to</c><00:12:12.269><c> comment</c><00:12:12.449><c> out</c><00:12:12.720><c> these</c><00:12:12.990><c> so</c>

00:12:13.549 --> 00:12:13.559 align:start position:0%
better I'm going to comment out these so
 

00:12:13.559 --> 00:12:14.869 align:start position:0%
better I'm going to comment out these so
at<00:12:13.680><c> this</c><00:12:13.860><c> point</c><00:12:14.129><c> it's</c><00:12:14.309><c> not</c><00:12:14.370><c> actually</c><00:12:14.850><c> doing</c>

00:12:14.869 --> 00:12:14.879 align:start position:0%
at this point it's not actually doing
 

00:12:14.879 --> 00:12:16.999 align:start position:0%
at this point it's not actually doing
anything<00:12:15.600><c> yet</c><00:12:15.779><c> so</c><00:12:16.019><c> you</c><00:12:16.110><c> can</c><00:12:16.259><c> see</c><00:12:16.410><c> if</c><00:12:16.500><c> I</c><00:12:16.589><c> rerun</c>

00:12:16.999 --> 00:12:17.009 align:start position:0%
anything yet so you can see if I rerun
 

00:12:17.009 --> 00:12:18.860 align:start position:0%
anything yet so you can see if I rerun
this<00:12:17.220><c> code</c><00:12:17.459><c> it</c><00:12:18.029><c> hasn't</c><00:12:18.389><c> actually</c><00:12:18.540><c> done</c>

00:12:18.860 --> 00:12:18.870 align:start position:0%
this code it hasn't actually done
 

00:12:18.870 --> 00:12:20.840 align:start position:0%
this code it hasn't actually done
anything<00:12:19.170><c> and</c><00:12:19.740><c> if</c><00:12:19.860><c> I</c><00:12:19.980><c> come</c><00:12:20.189><c> down</c><00:12:20.220><c> here</c><00:12:20.699><c> and</c>

00:12:20.840 --> 00:12:20.850 align:start position:0%
anything and if I come down here and
 

00:12:20.850 --> 00:12:24.799 align:start position:0%
anything and if I come down here and
just<00:12:21.149><c> print</c><00:12:21.509><c> out</c><00:12:21.689><c> this</c><00:12:22.439><c> print</c><00:12:23.250><c> h1</c><00:12:23.910><c> variable</c>

00:12:24.799 --> 00:12:24.809 align:start position:0%
just print out this print h1 variable
 

00:12:24.809 --> 00:12:27.860 align:start position:0%
just print out this print h1 variable
then<00:12:25.439><c> you</c><00:12:25.860><c> can</c><00:12:26.040><c> see</c><00:12:26.339><c> that</c><00:12:26.579><c> it's</c><00:12:27.059><c> just</c><00:12:27.300><c> equal</c><00:12:27.480><c> to</c>

00:12:27.860 --> 00:12:27.870 align:start position:0%
then you can see that it's just equal to
 

00:12:27.870 --> 00:12:30.889 align:start position:0%
then you can see that it's just equal to
this<00:12:28.709><c> wrap</c><00:12:29.399><c> text</c><00:12:29.759><c> function</c><00:12:30.420><c> so</c><00:12:30.600><c> it's</c><00:12:30.750><c> just</c>

00:12:30.889 --> 00:12:30.899 align:start position:0%
this wrap text function so it's just
 

00:12:30.899 --> 00:12:33.710 align:start position:0%
this wrap text function so it's just
waiting<00:12:31.170><c> to</c><00:12:31.410><c> be</c><00:12:31.529><c> executed</c><00:12:31.860><c> so</c><00:12:32.639><c> now</c><00:12:32.850><c> we</c><00:12:32.910><c> can</c><00:12:33.329><c> use</c>

00:12:33.710 --> 00:12:33.720 align:start position:0%
waiting to be executed so now we can use
 

00:12:33.720 --> 00:12:37.340 align:start position:0%
waiting to be executed so now we can use
this<00:12:34.189><c> print</c><00:12:35.189><c> h1</c><00:12:35.879><c> variable</c><00:12:36.389><c> just</c><00:12:36.899><c> like</c><00:12:37.079><c> it's</c><00:12:37.290><c> a</c>

00:12:37.340 --> 00:12:37.350 align:start position:0%
this print h1 variable just like it's a
 

00:12:37.350 --> 00:12:39.980 align:start position:0%
this print h1 variable just like it's a
function<00:12:37.800><c> because</c><00:12:37.980><c> it</c><00:12:38.220><c> is</c><00:12:38.339><c> a</c><00:12:38.370><c> function</c><00:12:38.819><c> and</c><00:12:38.990><c> if</c>

00:12:39.980 --> 00:12:39.990 align:start position:0%
function because it is a function and if
 

00:12:39.990 --> 00:12:42.679 align:start position:0%
function because it is a function and if
I<00:12:40.199><c> uncommon</c><00:12:40.709><c> out</c><00:12:40.800><c> these</c><00:12:41.370><c> lines</c><00:12:41.699><c> here</c><00:12:41.970><c> now</c>

00:12:42.679 --> 00:12:42.689 align:start position:0%
I uncommon out these lines here now
 

00:12:42.689 --> 00:12:44.329 align:start position:0%
I uncommon out these lines here now
remember<00:12:42.870><c> the</c><00:12:43.230><c> function</c><00:12:43.649><c> that</c><00:12:43.680><c> we</c><00:12:43.920><c> returned</c>

00:12:44.329 --> 00:12:44.339 align:start position:0%
remember the function that we returned
 

00:12:44.339 --> 00:12:47.449 align:start position:0%
remember the function that we returned
this<00:12:44.759><c> wrap</c><00:12:45.000><c> text</c><00:12:45.360><c> function</c><00:12:45.899><c> it</c><00:12:46.500><c> takes</c><00:12:46.949><c> in</c><00:12:47.220><c> an</c>

00:12:47.449 --> 00:12:47.459 align:start position:0%
this wrap text function it takes in an
 

00:12:47.459 --> 00:12:52.400 align:start position:0%
this wrap text function it takes in an
argument<00:12:47.730><c> called</c><00:12:48.569><c> message</c><00:12:49.319><c> so</c><00:12:50.189><c> I</c><00:12:50.519><c> can</c><00:12:51.269><c> pass</c><00:12:51.930><c> in</c>

00:12:52.400 --> 00:12:52.410 align:start position:0%
argument called message so I can pass in
 

00:12:52.410 --> 00:12:55.249 align:start position:0%
argument called message so I can pass in
I'm<00:12:52.680><c> going</c><00:12:52.829><c> to</c><00:12:52.920><c> execute</c><00:12:53.250><c> this</c><00:12:53.939><c> print</c><00:12:54.660><c> h1</c>

00:12:55.249 --> 00:12:55.259 align:start position:0%
I'm going to execute this print h1
 

00:12:55.259 --> 00:12:57.259 align:start position:0%
I'm going to execute this print h1
variable<00:12:55.709><c> that</c><00:12:55.829><c> we</c><00:12:55.949><c> just</c><00:12:55.980><c> created</c><00:12:56.250><c> and</c><00:12:56.819><c> I'm</c>

00:12:57.259 --> 00:12:57.269 align:start position:0%
variable that we just created and I'm
 

00:12:57.269 --> 00:12:59.420 align:start position:0%
variable that we just created and I'm
going<00:12:57.449><c> to</c><00:12:57.480><c> pass</c><00:12:57.689><c> in</c><00:12:57.990><c> the</c><00:12:58.139><c> message</c><00:12:58.529><c> of</c><00:12:58.740><c> test</c>

00:12:59.420 --> 00:12:59.430 align:start position:0%
going to pass in the message of test
 

00:12:59.430 --> 00:13:02.389 align:start position:0%
going to pass in the message of test
headline<00:13:00.059><c> and</c><00:13:00.329><c> then</c><00:13:00.779><c> down</c><00:13:01.019><c> here</c><00:13:01.050><c> I'm</c><00:13:01.589><c> running</c>

00:13:02.389 --> 00:13:02.399 align:start position:0%
headline and then down here I'm running
 

00:13:02.399 --> 00:13:04.519 align:start position:0%
headline and then down here I'm running
this<00:13:02.550><c> code</c><00:13:02.759><c> again</c><00:13:03.089><c> and</c><00:13:03.300><c> I'm</c><00:13:03.750><c> passing</c><00:13:04.019><c> in</c><00:13:04.319><c> a</c>

00:13:04.519 --> 00:13:04.529 align:start position:0%
this code again and I'm passing in a
 

00:13:04.529 --> 00:13:06.860 align:start position:0%
this code again and I'm passing in a
message<00:13:04.920><c> of</c><00:13:05.129><c> another</c><00:13:05.639><c> headline</c><00:13:06.059><c> so</c><00:13:06.600><c> whenever</c>

00:13:06.860 --> 00:13:06.870 align:start position:0%
message of another headline so whenever
 

00:13:06.870 --> 00:13:09.290 align:start position:0%
message of another headline so whenever
I<00:13:06.959><c> run</c><00:13:07.230><c> this</c><00:13:07.470><c> now</c><00:13:08.220><c> you</c><00:13:08.279><c> can</c><00:13:08.519><c> see</c><00:13:08.699><c> that</c><00:13:08.910><c> it</c><00:13:09.029><c> ran</c>

00:13:09.290 --> 00:13:09.300 align:start position:0%
I run this now you can see that it ran
 

00:13:09.300 --> 00:13:13.100 align:start position:0%
I run this now you can see that it ran
our<00:13:09.660><c> wrap</c><00:13:10.620><c> text</c><00:13:11.040><c> function</c><00:13:11.879><c> and</c><00:13:12.059><c> it</c><00:13:12.540><c> remembered</c>

00:13:13.100 --> 00:13:13.110 align:start position:0%
our wrap text function and it remembered
 

00:13:13.110 --> 00:13:16.069 align:start position:0%
our wrap text function and it remembered
the<00:13:13.470><c> tag</c><00:13:13.769><c> that</c><00:13:14.189><c> we</c><00:13:14.309><c> passed</c><00:13:14.579><c> in</c><00:13:14.819><c> before</c><00:13:15.389><c> so</c><00:13:15.959><c> it</c>

00:13:16.069 --> 00:13:16.079 align:start position:0%
the tag that we passed in before so it
 

00:13:16.079 --> 00:13:18.280 align:start position:0%
the tag that we passed in before so it
prints<00:13:16.379><c> out</c><00:13:16.500><c> the</c><00:13:16.529><c> tag</c><00:13:16.920><c> that</c><00:13:16.949><c> we</c><00:13:17.429><c> passed</c><00:13:17.670><c> in</c><00:13:17.939><c> the</c>

00:13:18.280 --> 00:13:18.290 align:start position:0%
prints out the tag that we passed in the
 

00:13:18.290 --> 00:13:21.259 align:start position:0%
prints out the tag that we passed in the
HTML<00:13:19.290><c> tag</c><00:13:19.529><c> function</c><00:13:19.829><c> here</c><00:13:20.370><c> and</c><00:13:20.490><c> then</c><00:13:21.000><c> it</c><00:13:21.120><c> also</c>

00:13:21.259 --> 00:13:21.269 align:start position:0%
HTML tag function here and then it also
 

00:13:21.269 --> 00:13:22.260 align:start position:0%
HTML tag function here and then it also
printed<00:13:21.720><c> it</c><00:13:21.809><c> out</c>

00:13:22.260 --> 00:13:22.270 align:start position:0%
printed it out
 

00:13:22.270 --> 00:13:24.329 align:start position:0%
printed it out
our<00:13:22.390><c> message</c><00:13:22.839><c> that</c><00:13:23.110><c> we</c><00:13:23.200><c> passed</c><00:13:23.440><c> into</c><00:13:23.830><c> each</c><00:13:23.980><c> of</c>

00:13:24.329 --> 00:13:24.339 align:start position:0%
our message that we passed into each of
 

00:13:24.339 --> 00:13:26.850 align:start position:0%
our message that we passed into each of
these<00:13:24.790><c> variables</c><00:13:25.480><c> which</c><00:13:25.870><c> is</c><00:13:26.050><c> equal</c><00:13:26.410><c> to</c><00:13:26.589><c> our</c>

00:13:26.850 --> 00:13:26.860 align:start position:0%
these variables which is equal to our
 

00:13:26.860 --> 00:13:29.010 align:start position:0%
these variables which is equal to our
rap<00:13:27.220><c> text</c><00:13:27.580><c> function</c><00:13:27.910><c> and</c><00:13:28.060><c> everything</c><00:13:28.870><c> that</c>

00:13:29.010 --> 00:13:29.020 align:start position:0%
rap text function and everything that
 

00:13:29.020 --> 00:13:31.079 align:start position:0%
rap text function and everything that
I'm<00:13:29.140><c> describing</c><00:13:29.440><c> over</c><00:13:29.830><c> here</c><00:13:30.160><c> in</c><00:13:30.310><c> Python</c><00:13:30.850><c> is</c>

00:13:31.079 --> 00:13:31.089 align:start position:0%
I'm describing over here in Python is
 

00:13:31.089 --> 00:13:33.150 align:start position:0%
I'm describing over here in Python is
also<00:13:31.990><c> the</c><00:13:32.170><c> exact</c><00:13:32.529><c> same</c><00:13:32.770><c> thing</c><00:13:33.010><c> that's</c>

00:13:33.150 --> 00:13:33.160 align:start position:0%
also the exact same thing that's
 

00:13:33.160 --> 00:13:35.370 align:start position:0%
also the exact same thing that's
happening<00:13:33.730><c> over</c><00:13:33.820><c> here</c><00:13:34.000><c> in</c><00:13:34.360><c> JavaScript</c><00:13:35.260><c> you</c>

00:13:35.370 --> 00:13:35.380 align:start position:0%
happening over here in JavaScript you
 

00:13:35.380 --> 00:13:36.630 align:start position:0%
happening over here in JavaScript you
can<00:13:35.410><c> see</c><00:13:35.649><c> it's</c><00:13:35.770><c> the</c><00:13:35.860><c> exact</c><00:13:36.190><c> same</c><00:13:36.399><c> process</c>

00:13:36.630 --> 00:13:36.640 align:start position:0%
can see it's the exact same process
 

00:13:36.640 --> 00:13:39.900 align:start position:0%
can see it's the exact same process
setting<00:13:37.570><c> this</c><00:13:37.720><c> variable</c><00:13:38.230><c> equal</c><00:13:38.920><c> to</c><00:13:39.070><c> HTML</c><00:13:39.730><c> tag</c>

00:13:39.900 --> 00:13:39.910 align:start position:0%
setting this variable equal to HTML tag
 

00:13:39.910 --> 00:13:42.780 align:start position:0%
setting this variable equal to HTML tag
function<00:13:40.390><c> passing</c><00:13:41.110><c> in</c><00:13:41.230><c> the</c><00:13:41.320><c> tag</c><00:13:41.529><c> of</c><00:13:41.860><c> h1</c><00:13:42.339><c> it</c>

00:13:42.780 --> 00:13:42.790 align:start position:0%
function passing in the tag of h1 it
 

00:13:42.790 --> 00:13:45.990 align:start position:0%
function passing in the tag of h1 it
returns<00:13:43.450><c> the</c><00:13:44.110><c> wrap</c><00:13:44.350><c> text</c><00:13:44.709><c> function</c><00:13:45.250><c> waiting</c>

00:13:45.990 --> 00:13:46.000 align:start position:0%
returns the wrap text function waiting
 

00:13:46.000 --> 00:13:49.050 align:start position:0%
returns the wrap text function waiting
for<00:13:46.360><c> this</c><00:13:46.810><c> message</c><00:13:47.320><c> argument</c><00:13:47.890><c> so</c><00:13:48.610><c> now</c><00:13:48.790><c> our</c>

00:13:49.050 --> 00:13:49.060 align:start position:0%
for this message argument so now our
 

00:13:49.060 --> 00:13:52.290 align:start position:0%
for this message argument so now our
print<00:13:49.540><c> h1</c><00:13:49.990><c> variable</c><00:13:50.500><c> is</c><00:13:50.649><c> equal</c><00:13:51.640><c> to</c><00:13:51.820><c> that</c>

00:13:52.290 --> 00:13:52.300 align:start position:0%
print h1 variable is equal to that
 

00:13:52.300 --> 00:13:54.870 align:start position:0%
print h1 variable is equal to that
function<00:13:52.660><c> that</c><00:13:53.080><c> got</c><00:13:53.380><c> returned</c><00:13:53.800><c> waiting</c><00:13:54.670><c> for</c>

00:13:54.870 --> 00:13:54.880 align:start position:0%
function that got returned waiting for
 

00:13:54.880 --> 00:13:57.360 align:start position:0%
function that got returned waiting for
that<00:13:54.940><c> message</c><00:13:55.209><c> so</c><00:13:55.959><c> now</c><00:13:56.140><c> we</c><00:13:56.200><c> can</c><00:13:56.529><c> execute</c><00:13:56.980><c> this</c>

00:13:57.360 --> 00:13:57.370 align:start position:0%
that message so now we can execute this
 

00:13:57.370 --> 00:13:59.790 align:start position:0%
that message so now we can execute this
just<00:13:57.940><c> like</c><00:13:58.089><c> any</c><00:13:58.300><c> other</c><00:13:58.480><c> function</c><00:13:58.930><c> we</c><00:13:59.529><c> passed</c>

00:13:59.790 --> 00:13:59.800 align:start position:0%
just like any other function we passed
 

00:13:59.800 --> 00:14:02.910 align:start position:0%
just like any other function we passed
in<00:14:00.070><c> our</c><00:14:00.330><c> message</c><00:14:01.330><c> and</c><00:14:01.600><c> it</c><00:14:02.110><c> printed</c><00:14:02.440><c> out</c><00:14:02.560><c> our</c>

00:14:02.910 --> 00:14:02.920 align:start position:0%
in our message and it printed out our
 

00:14:02.920 --> 00:14:05.370 align:start position:0%
in our message and it printed out our
tags<00:14:03.820><c> with</c><00:14:04.390><c> the</c><00:14:04.420><c> message</c><00:14:04.870><c> and</c><00:14:05.110><c> then</c><00:14:05.260><c> the</c>

00:14:05.370 --> 00:14:05.380 align:start position:0%
tags with the message and then the
 

00:14:05.380 --> 00:14:07.170 align:start position:0%
tags with the message and then the
closing<00:14:05.740><c> tags</c><00:14:05.950><c> and</c><00:14:06.250><c> then</c><00:14:06.730><c> just</c><00:14:07.000><c> to</c><00:14:07.089><c> illustrate</c>

00:14:07.170 --> 00:14:07.180 align:start position:0%
closing tags and then just to illustrate
 

00:14:07.180 --> 00:14:09.690 align:start position:0%
closing tags and then just to illustrate
the<00:14:07.570><c> point</c><00:14:07.690><c> a</c><00:14:08.140><c> little</c><00:14:08.350><c> further</c><00:14:08.800><c> you</c><00:14:09.399><c> can</c><00:14:09.520><c> see</c>

00:14:09.690 --> 00:14:09.700 align:start position:0%
the point a little further you can see
 

00:14:09.700 --> 00:14:12.630 align:start position:0%
the point a little further you can see
that<00:14:09.880><c> the</c><00:14:10.209><c> same</c><00:14:10.390><c> thing</c><00:14:10.630><c> down</c><00:14:10.779><c> here</c><00:14:11.640><c> starting</c>

00:14:12.630 --> 00:14:12.640 align:start position:0%
that the same thing down here starting
 

00:14:12.640 --> 00:14:15.300 align:start position:0%
that the same thing down here starting
off<00:14:12.790><c> with</c><00:14:13.000><c> a</c><00:14:13.060><c> paragraph</c><00:14:13.600><c> tag</c><00:14:14.050><c> instead</c><00:14:14.740><c> so</c><00:14:15.279><c> you</c>

00:14:15.300 --> 00:14:15.310 align:start position:0%
off with a paragraph tag instead so you
 

00:14:15.310 --> 00:14:17.370 align:start position:0%
off with a paragraph tag instead so you
can<00:14:15.520><c> see</c><00:14:15.700><c> that</c><00:14:15.910><c> that</c><00:14:16.660><c> that</c><00:14:16.810><c> worked</c><00:14:17.050><c> as</c><00:14:17.230><c> well</c>

00:14:17.370 --> 00:14:17.380 align:start position:0%
can see that that that worked as well
 

00:14:17.380 --> 00:14:19.199 align:start position:0%
can see that that that worked as well
now<00:14:17.980><c> there's</c><00:14:18.220><c> a</c><00:14:18.279><c> lot</c><00:14:18.490><c> more</c><00:14:18.640><c> practical</c>

00:14:19.199 --> 00:14:19.209 align:start position:0%
now there's a lot more practical
 

00:14:19.209 --> 00:14:21.389 align:start position:0%
now there's a lot more practical
examples<00:14:19.750><c> that</c><00:14:20.230><c> people</c><00:14:20.290><c> use</c><00:14:21.160><c> this</c>

00:14:21.389 --> 00:14:21.399 align:start position:0%
examples that people use this
 

00:14:21.399 --> 00:14:23.070 align:start position:0%
examples that people use this
functionality<00:14:21.880><c> for</c><00:14:22.209><c> a</c><00:14:22.270><c> lot</c><00:14:22.510><c> of</c><00:14:22.630><c> people</c><00:14:22.870><c> use</c>

00:14:23.070 --> 00:14:23.080 align:start position:0%
functionality for a lot of people use
 

00:14:23.080 --> 00:14:26.760 align:start position:0%
functionality for a lot of people use
this<00:14:23.320><c> for</c><00:14:24.250><c> logging</c><00:14:24.550><c> and</c><00:14:25.000><c> in</c><00:14:25.360><c> python</c><00:14:25.899><c> it's</c><00:14:26.230><c> it's</c>

00:14:26.760 --> 00:14:26.770 align:start position:0%
this for logging and in python it's it's
 

00:14:26.770 --> 00:14:29.460 align:start position:0%
this for logging and in python it's it's
similar<00:14:27.070><c> to</c><00:14:27.370><c> how</c><00:14:27.490><c> we</c><00:14:27.910><c> use</c><00:14:28.120><c> decorators</c><00:14:28.839><c> and</c><00:14:29.050><c> you</c>

00:14:29.460 --> 00:14:29.470 align:start position:0%
similar to how we use decorators and you
 

00:14:29.470 --> 00:14:31.199 align:start position:0%
similar to how we use decorators and you
can<00:14:29.620><c> see</c><00:14:29.800><c> how</c><00:14:29.980><c> returning</c><00:14:30.550><c> functions</c><00:14:31.060><c> like</c>

00:14:31.199 --> 00:14:31.209 align:start position:0%
can see how returning functions like
 

00:14:31.209 --> 00:14:33.810 align:start position:0%
can see how returning functions like
this<00:14:31.510><c> can</c><00:14:32.140><c> get</c><00:14:32.380><c> extremely</c><00:14:32.980><c> complicated</c><00:14:33.490><c> and</c>

00:14:33.810 --> 00:14:33.820 align:start position:0%
this can get extremely complicated and
 

00:14:33.820 --> 00:14:36.569 align:start position:0%
this can get extremely complicated and
confusing<00:14:34.329><c> because</c><00:14:35.230><c> it's</c><00:14:35.529><c> easy</c><00:14:35.770><c> to</c><00:14:36.130><c> lose</c>

00:14:36.569 --> 00:14:36.579 align:start position:0%
confusing because it's easy to lose
 

00:14:36.579 --> 00:14:38.460 align:start position:0%
confusing because it's easy to lose
track<00:14:36.940><c> of</c><00:14:36.970><c> exactly</c><00:14:37.630><c> what's</c><00:14:37.810><c> going</c><00:14:37.990><c> on</c><00:14:38.200><c> and</c>

00:14:38.460 --> 00:14:38.470 align:start position:0%
track of exactly what's going on and
 

00:14:38.470 --> 00:14:40.110 align:start position:0%
track of exactly what's going on and
like<00:14:38.950><c> I</c><00:14:39.100><c> said</c><00:14:39.160><c> I'll</c><00:14:39.430><c> go</c><00:14:39.579><c> further</c><00:14:39.820><c> into</c>

00:14:40.110 --> 00:14:40.120 align:start position:0%
like I said I'll go further into
 

00:14:40.120 --> 00:14:42.600 align:start position:0%
like I said I'll go further into
closures<00:14:40.600><c> and</c><00:14:40.870><c> a</c><00:14:40.990><c> future</c><00:14:41.410><c> video</c><00:14:41.680><c> but</c><00:14:41.950><c> to</c>

00:14:42.600 --> 00:14:42.610 align:start position:0%
closures and a future video but to
 

00:14:42.610 --> 00:14:44.940 align:start position:0%
closures and a future video but to
understand<00:14:43.060><c> those</c><00:14:43.300><c> we</c><00:14:43.630><c> really</c><00:14:43.930><c> need</c><00:14:44.110><c> to</c><00:14:44.290><c> have</c>

00:14:44.940 --> 00:14:44.950 align:start position:0%
understand those we really need to have
 

00:14:44.950 --> 00:14:47.069 align:start position:0%
understand those we really need to have
a<00:14:44.980><c> grasp</c><00:14:45.430><c> on</c><00:14:45.760><c> these</c><00:14:46.029><c> first-class</c><00:14:46.750><c> functions</c>

00:14:47.069 --> 00:14:47.079 align:start position:0%
a grasp on these first-class functions
 

00:14:47.079 --> 00:14:50.220 align:start position:0%
a grasp on these first-class functions
and<00:14:47.560><c> how</c><00:14:48.040><c> we</c><00:14:48.100><c> can</c><00:14:48.459><c> use</c><00:14:48.850><c> these</c><00:14:49.329><c> functions</c><00:14:49.870><c> not</c>

00:14:50.220 --> 00:14:50.230 align:start position:0%
and how we can use these functions not
 

00:14:50.230 --> 00:14:52.050 align:start position:0%
and how we can use these functions not
just<00:14:50.290><c> execute</c><00:14:51.160><c> the</c><00:14:51.250><c> functions</c><00:14:51.640><c> but</c><00:14:51.790><c> we</c><00:14:51.910><c> can</c>

00:14:52.050 --> 00:14:52.060 align:start position:0%
just execute the functions but we can
 

00:14:52.060 --> 00:14:54.060 align:start position:0%
just execute the functions but we can
also<00:14:52.180><c> pass</c><00:14:52.510><c> them</c><00:14:52.750><c> around</c><00:14:52.870><c> just</c><00:14:53.740><c> like</c><00:14:53.829><c> any</c>

00:14:54.060 --> 00:14:54.070 align:start position:0%
also pass them around just like any
 

00:14:54.070 --> 00:14:56.579 align:start position:0%
also pass them around just like any
other<00:14:54.279><c> variable</c><00:14:54.459><c> we</c><00:14:54.970><c> can</c><00:14:55.240><c> assign</c><00:14:56.200><c> them</c><00:14:56.440><c> to</c>

00:14:56.579 --> 00:14:56.589 align:start position:0%
other variable we can assign them to
 

00:14:56.589 --> 00:14:59.280 align:start position:0%
other variable we can assign them to
variables<00:14:57.040><c> we</c><00:14:57.430><c> can</c><00:14:57.690><c> pass</c><00:14:58.690><c> them</c><00:14:58.930><c> in</c><00:14:59.140><c> as</c>

00:14:59.280 --> 00:14:59.290 align:start position:0%
variables we can pass them in as
 

00:14:59.290 --> 00:15:01.139 align:start position:0%
variables we can pass them in as
arguments<00:14:59.829><c> like</c><00:14:59.950><c> we</c><00:15:00.130><c> did</c><00:15:00.310><c> in</c><00:15:00.550><c> our</c><00:15:00.760><c> previous</c>

00:15:01.139 --> 00:15:01.149 align:start position:0%
arguments like we did in our previous
 

00:15:01.149 --> 00:15:03.960 align:start position:0%
arguments like we did in our previous
example<00:15:01.720><c> and</c><00:15:01.839><c> we</c><00:15:02.589><c> can</c><00:15:02.890><c> return</c><00:15:03.310><c> these</c>

00:15:03.960 --> 00:15:03.970 align:start position:0%
example and we can return these
 

00:15:03.970 --> 00:15:06.569 align:start position:0%
example and we can return these
functions<00:15:04.510><c> from</c><00:15:05.050><c> other</c><00:15:05.410><c> functions</c><00:15:05.950><c> so</c>

00:15:06.569 --> 00:15:06.579 align:start position:0%
functions from other functions so
 

00:15:06.579 --> 00:15:08.130 align:start position:0%
functions from other functions so
hopefully<00:15:06.910><c> after</c><00:15:07.029><c> this</c><00:15:07.270><c> video</c><00:15:07.450><c> you</c><00:15:07.959><c> get</c><00:15:08.110><c> a</c>

00:15:08.130 --> 00:15:08.140 align:start position:0%
hopefully after this video you get a
 

00:15:08.140 --> 00:15:10.290 align:start position:0%
hopefully after this video you get a
sense<00:15:08.500><c> of</c><00:15:08.709><c> all</c><00:15:09.130><c> the</c><00:15:09.640><c> different</c><00:15:09.940><c> things</c><00:15:09.970><c> that</c>

00:15:10.290 --> 00:15:10.300 align:start position:0%
sense of all the different things that
 

00:15:10.300 --> 00:15:12.300 align:start position:0%
sense of all the different things that
you<00:15:10.450><c> can</c><00:15:10.660><c> do</c><00:15:10.810><c> with</c><00:15:10.959><c> those</c><00:15:11.140><c> so</c><00:15:11.860><c> I</c><00:15:11.890><c> think</c><00:15:12.040><c> that's</c>

00:15:12.300 --> 00:15:12.310 align:start position:0%
you can do with those so I think that's
 

00:15:12.310 --> 00:15:14.130 align:start position:0%
you can do with those so I think that's
going<00:15:12.459><c> to</c><00:15:12.520><c> do</c><00:15:12.610><c> it</c><00:15:12.700><c> for</c><00:15:12.820><c> this</c><00:15:12.910><c> video</c><00:15:13.209><c> if</c><00:15:13.750><c> you</c><00:15:13.990><c> do</c>

00:15:14.130 --> 00:15:14.140 align:start position:0%
going to do it for this video if you do
 

00:15:14.140 --> 00:15:15.870 align:start position:0%
going to do it for this video if you do
have<00:15:14.290><c> any</c><00:15:14.470><c> questions</c><00:15:14.920><c> just</c><00:15:15.040><c> feel</c><00:15:15.520><c> free</c><00:15:15.579><c> to</c><00:15:15.760><c> ask</c>

00:15:15.870 --> 00:15:15.880 align:start position:0%
have any questions just feel free to ask
 

00:15:15.880 --> 00:15:17.280 align:start position:0%
have any questions just feel free to ask
in<00:15:16.180><c> the</c><00:15:16.240><c> comment</c><00:15:16.570><c> section</c><00:15:16.899><c> below</c>

00:15:17.280 --> 00:15:17.290 align:start position:0%
in the comment section below
 

00:15:17.290 --> 00:15:19.110 align:start position:0%
in the comment section below
be<00:15:17.860><c> sure</c><00:15:18.040><c> to</c><00:15:18.070><c> subscribe</c><00:15:18.370><c> for</c><00:15:18.820><c> future</c><00:15:18.970><c> videos</c>

00:15:19.110 --> 00:15:19.120 align:start position:0%
be sure to subscribe for future videos
 

00:15:19.120 --> 00:15:22.600 align:start position:0%
be sure to subscribe for future videos
and<00:15:19.660><c> thank</c><00:15:19.870><c> you</c><00:15:19.959><c> all</c><00:15:20.079><c> for</c><00:15:20.110><c> watching</c>

00:15:22.600 --> 00:15:22.610 align:start position:0%
 
 

00:15:22.610 --> 00:15:24.670 align:start position:0%
 
you

